{"version":3,"sources":["shared/images/fitness_girl.webp","shared/images/profile_logo.webp","shared/images/login_side.webp","shared/images/blacklogo.webp","shared/images/landing_page.webp","shared/images/react.webp","shared/images/apollo.webp","shared/images/graphql.webp","shared/images/instagram.webp","shared/images/facebook.webp","shared/images/linkedin.webp","shared/images/exercise_girl.webp","shared/images/lock_logo.webp","shared/images/register_side.webp","shared/images/icon_dumbbell.webp","shared/images/correct.webp","shared/images/trainer1.webp","shared/images/trainer2.webp","shared/images/trainer3.webp","shared/images/user1.webp","shared/images/user2.webp","shared/images/user3.webp","shared/images/whitelogo.webp","ui/authentication/components/LandingPageNavbar.js","shared/components/Footer.js","ui/authentication/pages/LandingPage.js","ui/authentication/components/LoginForm.js","ui/authentication/components/RecoverPassword.js","ui/authentication/components/Login.js","ui/authentication/pages/LoginPage.js","ui/authentication/components/RegisterForm.js","ui/authentication/components/ValidateAccount.js","ui/authentication/components/IsValid.js","ui/authentication/components/Register.js","ui/authentication/pages/RegisterPage.js","ui/authentication/components/ValidateForm.js","ui/authentication/pages/ValidatePage.js","shared/routes/default/index.js","shared/components/Carrousel.js","ui/trainer/home/TrainerHomePage.js","shared/components/BlankNavBar.js","ui/trainer/profile/components/AssignProfileForm.js","ui/trainer/profile/pages/TrainerAddProfile.js","ui/trainer/sessions/pages/TrainerSessionHome.js","ui/trainer/profile/components/DegreesList.js","ui/trainer/profile/components/SpecialitiesList.js","ui/trainer/profile/components/upload_page/cons_uplo_backdrop/backdropimg.js","ui/trainer/profile/components/upload_page/upload_card/upload_card.js","ui/trainer/profile/components/upload_page/upload_page.js","fire/Fire.js","ui/trainer/profile/components/TrainerProfile.js","ui/trainer/profile/components/TrainerUpdateInfoForm.js","ui/trainer/profile/components/AddDegreeForm.js","ui/trainer/profile/components/AddSpecialitiesForm.js","ui/trainer/profile/components/TrainerEditProfile.js","shared/components/ChangePassword.js","ui/trainer/profile/pages/TrainerProfilePage.js","ui/trainer/routines/components/RoutinesHome.js","ui/trainer/routines/components/CreateRoutineForm.js","ui/trainer/routines/components/CreateRoutine.js","ui/trainer/routines/pages/TrainerRoutinesHomePage.js","ui/trainer/navbar/pages/Navbar.js","shared/routes/trainer/index.js","ui/user/home/UserHomePage.js","ui/user/profile/components/AssignProfileForm.js","ui/user/profile/pages/UserAddProfile.js","ui/user/profile/components/UserProfile.js","ui/user/profile/components/UserEditProfile.js","ui/user/profile/pages/UserProfilePage.js","ui/user/routines/components/HomeRoutinesList.js","ui/user/routines/components/SelectRoutineByIdForm.js","ui/user/routines/pages/UserRoutinesHomePage.js","ui/user/navbar/pages/Navbar.js","ui/user/sessions/pages/UserSessionHome.js","ui/user/sessions/pages/UserSessionTrainer.js","ui/user/sessions/pages/UserTrainersHome.js","shared/routes/user/index.js","shared/routes/index.js","App.js","serviceWorker.js","apollo/client.js","index.js","shared/images/box.webp","shared/images/running_people.webp"],"names":["module","exports","LandigPageNavbar","props","className","to","align","alt","src","whitelogo","width","type","Footer","title","aria-hidden","href","target","rel","instagram","facebook","linkedin","react","apollo","graphql","LandingPage","landing_lage","AUTHENTICATION","gql","AUTHTOKEN","LoginForm","client","useApolloClient","history","useHistory","useMutation","errorPolicy","authentication","data","loading","error","getTokenData","called","tokenData","tokenLoading","tokenError","callTokenData","a","variables","Token","webAuthentication","onSubmitAuth","values","Email","Password","writeData","token","webValidateAuthToken","TypeID","profile","Profile","localStorage","setItem","role","message","substring","trim","push","exercise_girl","style","name","initialValues","remember","onFinish","layout","size","Item","label","rules","required","htmlType","background","color","borderColor","onClick","changePassHandler","RECOVER_PASSWORD","RecoverPassword","useState","isSuccesfull","setIsSuccesfull","useLazyQuery","onSubmitRecover","lock_logo","Login","passwordState","loginState","setLoginState","LoginPage","login_side","padding","RegisterForm","types","Option","Select","authGetTypes","map","key","ID","value","Name","icon_dumbbell","min","placeholder","mutationLoading","mutationError","ValidateAcount","IsValid","correct","GET_TYPES","CREATE_USER","VALIDATE_USER","Register","account","verified","email","registerState","setRegisterState","useQuery","queryLoading","queryError","createUser","validateUser","mutationLoading2","mutationError2","onSubmitUser","onSubmitValidate","Vcode","vcode","ValidateAccount","RegisterPage","register_side","validated","ValidateForm","DefaultSwitch","exact","path","ValidatePage","Carrousel","autoplay","img1","alt1","img2","alt2","img3","alt3","UserHomePage","trainer1","trainer2","trainer3","blacklogo","running_people","margin","profile_logo","fitness_girl","GET_AUTH_DATA","ASSIGN_PROFILE","AssignProfileForm","cache","AssignProfile","city","telephone","age","photo","sum_ratings","num_ratings","description","work_experience","resources","max","TextArea","TrainerAddProfile","BlankNavBar","box","Title","Typography","Search","Input","GET_SESSIONS","GET_TOKEN","CREATE_SESSION","DELETE_SESSION","DELETE_TAKEN_SESSION","CHATS_TRAINER","SEND_MESSAGE","TrainerSessionHome","console","log","cardSession","setCardSession","justify","xs","border","borderRadius","backgroundColor","level","itemLayout","dataSource","renderItem","item","Meta","sessions","getAllbyId","onClickHour","e","dateFormatYYYMMDD","today","month","getMonth","day","getDate","year","getFullYear","length","DaysCalendar","day1","Date","day2","day3","day4","day5","setDate","daysName","day1Format","day2Format","day3Format","day4Format","day5Format","dayHours","iniTime","endTime","status","id","nameStatus","sessionsDaysData","getDay","hours","h","forEach","hour","daySession","slice","session","parseInt","dayNumber","DayComponent","content","card","cursor","onClickExit","hourSession","placement","ListItem","fontWeight","CardFree","schedule","update","registerSchedules","readQuery","query","writeQuery","concat","bordered","CardAvailable","id_schedule","filter","deleteSchedules","CardTaken","menssage","setMenssage","messagesEndRef","useRef","userId","idUser","skip","pollInterval","messages","chatTrainerUser","useEffect","current","scrollIntoView","behavior","sendMessage","height","overflow","id_trainer","id_author","_id","paddingLeft","paddingRight","maxWidth","wordBreak","ref","enterButton","CheckOutlined","onChange","onSearch","chatId","TitleCard","degree_name","institution","DegreesList","degreesData","degreeList","degree","index","speciality","SpecialitiesList","specialities","specialitiesList","Backdrop","onClickCancelar","Component","UploadCard","state","imageurl","previsualization","foto","fileselectedhandler","event","file","files","setState","URL","createObjectURL","uploadbar","percentageImageLoading","this","aria-valuenow","aria-valuemin","aria-valuemax","lang","htmlFor","onClickActualizar","UploadPage","img","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GET_PROFILE","GET_ID","UPDATE_PROFILE","TrainerProfile","loadingProfile","errorProfile","dataProfile","uploadImage","setUploadImage","updateProfile","setPercentageImageLoading","uploadImages","authValidateAuthToken","perfilImghandler","addImagen","percentage","profileTrainer","loadImg","fullyLoaded","task","storage","put","storageData","on","snapshot","bytesTransferred","totalBytes","getDownloadURL","url","trainerData","trainer_name","goToEditProfile","TrainerUpdateInfoForm","onSubmitUpdateProfile","AddDegreeForm","onSubmitDegree","GET_SPECIALITIES","AddSpecialitiesForm","profileToAddSpecialitities","speciality_id","speciality_name","onSubmitSpeciality","ADD_DEGREE","ADD_SPECIALITY","UPDATE_TRAINER_PROFILE","TrainerEditProfile","UpdateProfile","UpdateDegrees","newDegree","loading2","error2","UpdateSpeciality","loading3","error3","res","split","changedSpeciality","changedProfile","updateProfileTrainer","changedDegree","createProfileDegree","goToProfile","goToChangePass","CHANGE_PASSWORD","ChangePassword","password","newpassword","userData","GET_DEGREES","TrainerProfilePage","pageState","setPageState","setTrainerData","setDegreesData","refetch","degrees","refetch2","profileDegreesByTrainers","degress","RoutineCard","linkPreview","frameBorder","allow","allowFullScreen","price","rating","RoutinesHome","routinesData","RoutinesList","routine","getAllTypeRoutine","onSubmitRoutine","CREATE_ROUTINE","CreateRoutine","createRoutine","link_preview","idType","changedRoutine","CreateRoutineForm","goToRoutinesHome","GET_ROUTINES","TrainerRoutinesHome","setRoutinesData","getRoutineByIdOwner","goToCreateRoutine","routines","Header","Layout","Navbar","marginRight","theme","mode","defaultSelectedKeys","TrainerSwitch","TrainerHomePage","TrainerRoutinesHomePage","user3","user1","user2","UserAddProfile","UserProfile","user_name","UserEditProfile","updateProfileUser","UserProfilePage","setUserData","profileUser","HomeRoutinesList","routinesList","SelectRoutineByIdForm","onSubmitChangefilter","GET_ALL_ROUTINES","UserRoutinesHomePage","list","setFilter","getRoutines","data2","getRoutinesByType","getAllRoutines","GET_SESSIONS_USER","CANCEL_SESSION_USER","CHATS_USER","UserSessionHome","dataSesssion","errorSession","loadingSesssion","getCurrentbyId","GET_USER_SESSIONS_COACH","marginBottom","refetchQueries","coach","idCoach","cancelSesssion","trainerId","chatUserTrainer","id_user","CREATE_USER_SESSION","GET_PROFILE_TRAINER","CREATE_CHAT_USER_TRAINER","UserSessionTrainer","useParams","idTrainer","IconText","icon","text","React","createElement","profileTrainerById","trainers","trainer_id","actions","StarOutlined","PhoneOutlined","HomeOutlined","avatar","Fragment","getAllbyCoachAvaibles","createCahtUserTrainer","GET_TRAINERS","UserTrainersHome","location","useLocation","profileTrainers","trainer","pagination","page","pageSize","pathname","UserSwitch","Routes","App","Boolean","window","hostname","match","InMemoryCache","ApolloClient","uri","process","GATEWAY_URL","getItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CAAEC,GAAI,EAAGC,WAAY,UAE/B,CACEJ,QAAS,WACTC,QAAS,WACTC,OAAQ,CA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","file":"static/js/main.5313363b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fitness_girl.91cbba87.webp\";","module.exports = __webpack_public_path__ + \"static/media/profile_logo.8d3766ce.webp\";","module.exports = __webpack_public_path__ + \"static/media/login_side.7c43df0c.webp\";","module.exports = __webpack_public_path__ + \"static/media/blacklogo.3581eaed.webp\";","module.exports = __webpack_public_path__ + \"static/media/landing_page.02590fdd.webp\";","module.exports = __webpack_public_path__ + \"static/media/react.e085a7cb.webp\";","module.exports = __webpack_public_path__ + \"static/media/apollo.d3e66837.webp\";","module.exports = __webpack_public_path__ + \"static/media/graphql.d0b2e1ec.webp\";","module.exports = __webpack_public_path__ + \"static/media/instagram.f4fd1a59.webp\";","module.exports = __webpack_public_path__ + \"static/media/facebook.01bc83e7.webp\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.bb9e261e.webp\";","module.exports = __webpack_public_path__ + \"static/media/exercise_girl.a61d2a4f.webp\";","module.exports = __webpack_public_path__ + \"static/media/lock_logo.afb963da.webp\";","module.exports = __webpack_public_path__ + \"static/media/register_side.7c669ca0.webp\";","module.exports = __webpack_public_path__ + \"static/media/icon_dumbbell.190d0ddf.webp\";","module.exports = __webpack_public_path__ + \"static/media/correct.e946b6ce.webp\";","module.exports = __webpack_public_path__ + \"static/media/trainer1.e677938d.webp\";","module.exports = __webpack_public_path__ + \"static/media/trainer2.914c5148.webp\";","module.exports = __webpack_public_path__ + \"static/media/trainer3.43e8e6e8.webp\";","module.exports = __webpack_public_path__ + \"static/media/user1.b01c3e12.webp\";","module.exports = __webpack_public_path__ + \"static/media/user2.db1f0516.webp\";","module.exports = __webpack_public_path__ + \"static/media/user3.7e661539.webp\";","module.exports = __webpack_public_path__ + \"static/media/whitelogo.fd413cb0.webp\";","import React from 'react';\r\n\r\nimport whitelogo from '../../../shared/images/whitelogo.webp';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LandigPageNavbar = (props) => {\r\n  return (\r\n    <nav className=\"navbar BlackColor\">\r\n      <Link to=\"/\">\r\n        <img align=\"middle\" alt=\"react\" src={whitelogo} className=\"img-fluid ml-3\" width=\"60px\" />\r\n      </Link>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <Link to=\"/login\">\r\n          <button type=\"button\" className=\"btn btn-outline-light mr-2\">Ingresar</button>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <button type=\"button\" className=\"btn btn-outline-light\">Registrarse</button>\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default LandigPageNavbar;","import React from 'react';\r\n\r\nimport '../css/colors.css';\r\nimport '../css/fonts.css';\r\nimport '../css/fontcolor.css';\r\n\r\nimport react from '../images/react.webp';\r\nimport apollo from '../images/apollo.webp';\r\nimport graphql from '../images/graphql.webp';\r\nimport instagram from '../images/instagram.webp';\r\nimport facebook from '../images/facebook.webp';\r\nimport linkedin from '../images/linkedin.webp';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid MainGradient p-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-4  mb-2 text-center\">\r\n            <h2 className=\"TitleFontTypeRoboto mb-3\">Contacto</h2>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <span className=\"oi oi-chevron-right mt-1 mr-2\" title=\"person\" aria-hidden=\"true\"></span>\r\n              <p><a className=\"FontDarkColor TitleFontTypeRoboto\" href=\"https://github.com/Arquitectura-Proyecto\" target=\"_blank\" rel=\"noopener noreferrer\"> NOSOTROS </a></p>\r\n            </div>\r\n            <h2 className=\"TitleFontTypeRoboto text-center\">Social</h2>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img align=\"middle\" alt=\"instagram\" src={instagram} className=\"img-fluid mr-3\" width=\"35px\" />\r\n              <img align=\"middle\" alt=\"facebook\" src={facebook} className=\"img-fluid ml-3 mr-3\" width=\"35px\" />\r\n              <img align=\"middle\" alt=\"linkedin\" src={linkedin} className=\"img-fluid ml-3\" width=\"35px\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-4 mb-2 text-center\">\r\n            <h1 className=\"FontDarkColor font-italic text-uppercase  mt-1 d-block d-sm-none\"> BodySoft</h1>\r\n            <h3 className=\"FontDarkColor font-italic text-uppercase HugeTextFont mt-1 d-none d-sm-block\"> BodySoft</h3>\r\n            <h6 className=\"mb-3\">powered by:</h6>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img align=\"middle\" alt=\"react\" src={react} className=\"img-fluid ml-3\" width=\"60px\" />\r\n              <img align=\"middle\" alt=\"react\" src={apollo} className=\"img-fluid ml-3\" width=\"60px\" />\r\n              <img align=\"middle\" alt=\"react\" src={graphql} className=\"img-fluid ml-3\" width=\"60px\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-4  mb-1 text-center\">\r\n            <h2 className=\"TitleFontTypeRoboto mb-3 mt-2\">Nuevas Funcionalidades</h2>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <span className=\"oi oi-eye mt-1 mr-2\" title=\"person\" aria-hidden=\"true\"></span>\r\n              <p className=\"TextFontTypeRoboto\">Rutinas recomendadas de la semana</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <span className=\"oi oi-laptop mt-1 mr-2\" title=\"person\" aria-hidden=\"true\"></span>\r\n              <p className=\"TextFontTypeRoboto\">Nueva interfaz para ver tu perfil</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <span className=\"oi oi-wifi mt-1 mr-2\" title=\"person\" aria-hidden=\"true\"></span>\r\n              <p className=\"TextFontTypeRoboto\">Mejoras en el rendimiento de la pagina</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport '../../../shared/css/images.css';\r\n\r\nimport landing_lage from '../../../shared/images/landing_page.webp';\r\nimport whitelogo from '../../../shared/images/whitelogo.webp';\r\n\r\nimport LandigPageNavbar from '../components/LandingPageNavbar';\r\nimport Footer from '../../../shared/components/Footer';\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <LandigPageNavbar />\r\n      <div className=\"BackgroundImageContainer\">\r\n        <img align=\"middle\" alt=\"react\" src={landing_lage} className=\"BackgroundDarkImage\"/>\r\n        <div className=\"container ContentOverImage\">\r\n          <div className=\"row text-center align-items-center justify-content-center\">\r\n            <div className=\"col-12 col-md-6 textcenter\">\r\n              <img className=\"d-inline d-md-none\" alt=\"BodySoft\" title=\"BodySoft\" src={whitelogo} width=\"80px\"></img>\r\n              <img className=\"d-none d-md-inline d-lg-none\" alt=\"BodySoft\" title=\"BodySoft\" src={whitelogo} width=\"250px\"></img>\r\n              <img className=\"d-none d-lg-inline d-xl-none\" alt=\"BodySoft\" title=\"BodySoft\" src={whitelogo} width=\"300px\"></img>\r\n              <img className=\"d-none d-xl-inline\" alt=\"BodySoft\" title=\"BodySoft\" src={whitelogo} width=\"350px\"></img>\r\n              <h1 className=\"FontWhiteColor font-italic text-uppercase  mt-1 d-block d-sm-none\"> BodySoft</h1>\r\n              <h3 className=\"FontWhiteColor font-italic text-uppercase HugeTextFont mt-1 d-none d-sm-block\"> BodySoft</h3>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <h1 className=\"mb-5 FontWhiteColor d-none d-sm-block\"> Lo mejor del <strong className=\"FontMaincolor\">fitness</strong>  en un solo lugar</h1>\r\n              <p className=\" FontWhiteColor d-none d-sm-block\"><strong>BodySoft</strong> es la nueva plataforma que te permitirá como persona natural acceder a múltiples servicios relacionados con el ejercicio, que van desde un gran repertorio de rutinas, hasta la posibilidad de poder contactar a los mejores entrenadores de la región.</p>\r\n              <h1 className=\"mb-5 FontWhiteColor d-block d-sm-none\"> Lo mejor del <strong className=\"FontMaincolor\">fitness</strong>  en un solo lugar</h1>\r\n              <p className=\"FontWhiteColor d-block d-sm-none\"><strong>BodySoft</strong> es la nueva plataforma que te permitirá como persona natural acceder a múltiples servicios relacionados con el ejercicio, que van desde un gran repertorio de rutinas, hasta la posibilidad de poder contactar a los mejores entrenadores de la región.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\n\r\nimport exercise_girl from '../../../shared/images/exercise_girl.webp';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst AUTHENTICATION = gql`\r\n  mutation Authentication($Email: String!, $Password: String!){\r\n    webAuthentication(email: $Email, password: $Password){\r\n        Token\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst AUTHTOKEN = gql`\r\n   mutation AuthToken($Token: String!){\r\n    webValidateAuthToken(token: $Token){\r\n        TypeID,\r\n        Profile\r\n      }\r\n  }\r\n`;\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const client = useApolloClient();\r\n\r\n    const history = useHistory();\r\n\r\n    const [authentication, { data, loading, error }] = useMutation(AUTHENTICATION, { errorPolicy: 'all' });\r\n    const [getTokenData, { called, data: tokenData, loading: tokenLoading, error: tokenError }] = useMutation(AUTHTOKEN, { errorPolicy: 'all' });\r\n\r\n    const callTokenData = async () => {\r\n        try {\r\n            await getTokenData({ variables: { Token: data.webAuthentication.Token } });\r\n        } catch (e) { }\r\n    }\r\n\r\n    const onSubmitAuth = async values => {\r\n        try {\r\n            await authentication({ variables: { Email: values.Email, Password: values.Password } });\r\n        } catch (e) { }\r\n    };\r\n\r\n    if (data && !called) {\r\n        callTokenData();\r\n    }\r\n\r\n    if (tokenData) {\r\n        client.writeData({\r\n            data: {\r\n                token: data.webAuthentication.Token,\r\n                type: tokenData.webValidateAuthToken.TypeID,\r\n                profile: tokenData.webValidateAuthToken.Profile\r\n            }\r\n        })\r\n        localStorage.setItem(\"token\", data.webAuthentication.Token)\r\n        localStorage.setItem(\"type\", tokenData.webValidateAuthToken.TypeID)\r\n        localStorage.setItem(\"profile\", (tokenData.webValidateAuthToken.Profile ? \"true\" : \"\"))\r\n    }\r\n\r\n    if (loading || tokenLoading) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error && error.message.substring(14, 18).trim() === \"406\") {\r\n        history.push('/validate')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto\">BodySoft</h1>\r\n            <img alt=\"react\" src={exercise_girl} style={{ width: \"70px\" }} className=\"m-0\" />\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onSubmitAuth}\r\n                layout={'vertical'}\r\n                size={'large'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Correo:\"\r\n                    name=\"Email\"\r\n                    rules={[{ required: true, type: 'email', message: 'Por favor ingrese un correo valido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Contraseña:\"\r\n                    name=\"Password\"\r\n                    rules={[{ required: true, message: 'Ingrese una contraseña' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Ingresar\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button type=\"button\" className=\"btn btn-link FontBlackLink\" onClick={() => { props.changePassHandler() }}>\r\n                Olvidaste tu contraseña?\r\n            </button>\r\n            {(tokenError) &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    {tokenError.message.substring(19)}\r\n                </div>\r\n            }\r\n            {(error) &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    {error.message.substring(19)}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport lock_logo from '../../../shared/images/lock_logo.webp';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst RECOVER_PASSWORD = gql`\r\n  query RecoverPassword($Email: String!){\r\n    authRecoverPassword(email: $Email)\r\n  }\r\n`;\r\n\r\n\r\nconst RecoverPassword = (props) => {\r\n\r\n\r\n    const [isSuccesfull, setIsSuccesfull] = useState(false);\r\n    const [authentication, { error, loading }] = useLazyQuery(RECOVER_PASSWORD, { errorPolicy: 'all' });\r\n\r\n    const onSubmitRecover = async values => {\r\n        await authentication({ variables: { Email: values.Email } });\r\n        setIsSuccesfull(true);\r\n    };\r\n\r\n    let message;\r\n    if (isSuccesfull && !error) {\r\n        message = <div className=\"alert alert-success m-0\" role=\"alert\">\r\n            Se envio el correo\r\n        </div>\r\n    }\r\n\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto\">Recuperar Contraseña</h1>\r\n            <img alt=\"react\" src={lock_logo} style={{ width: \"70px\" }} className=\"mb-4\" />\r\n            <p>Se enviará un correo electrónico con la contraseña actual.</p>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onSubmitRecover}\r\n                layout={'vertical'}\r\n                size={'large'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Correo\"\r\n                    name=\"Email\"\r\n                    rules={[{ required: true, type: 'email', message: 'Por favor ingrese un correo valido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Recuperar Contraseña\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <button type=\"button\" className=\"btn btn-link FontBlackLink\" onClick={() => { props.changePassHandler() }}>\r\n                Volver\r\n            </button>\r\n            {message}\r\n            {error &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    No hay una cuenta asociada con ese correo\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecoverPassword;","import React, { useState } from 'react';\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RecoverPassword from './RecoverPassword';\r\n\r\nconst Login = () => {\r\n\r\n    const [loginState, setLoginState] = useState({ passwordState: false });\r\n\r\n    const changePassHandler = () => {\r\n        setLoginState({ ...loginState, passwordState: !loginState.passwordState })\r\n    }\r\n\r\n    if (loginState.passwordState === true) {\r\n        return (\r\n            <RecoverPassword\r\n                changePassHandler={changePassHandler}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <LoginForm\r\n            changePassHandler={changePassHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nimport login_side from '../../../shared/images/login_side.webp';\r\nimport '../../../shared/css/images.css';\r\n\r\nimport LandigPageNavbar from '../components/LandingPageNavbar';\r\nimport Login from '../components/Login';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <>\r\n            <LandigPageNavbar />\r\n            <div className=\"container-fluid pl-0\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 d-none d-sm-block\">\r\n                        <img className=\"img-fluid BackgroundImage\" src={login_side} alt=\"Responsive\" />\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 text-center m-0\" style={{padding: \"9%\"}}>\r\n                        <Login/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nimport icon_dumbbell from '../../../shared/images/icon_dumbbell.webp';\r\n\r\nimport { Form, Input, Button, Select } from 'antd';\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const types = [];\r\n    const { Option } = Select;\r\n    props.data.authGetTypes.map((data) => {\r\n        types.push(<Option key={data.ID} value={data.ID}>{data.Name}</Option>)\r\n        return null;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto mb-0\">Crear Cuenta</h1>\r\n            <img alt=\"react\" src={icon_dumbbell} style={{ width: \"70px\" }} className=\"m-0\" />\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onFinish}\r\n                layout={'vertical'}\r\n                size={'medium'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Correo:\"\r\n                    name=\"Email\"\r\n                    rules={[{ required: true, type: 'email', message: 'Por favor ingrese un correo valido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Contraseña:\"\r\n                    name=\"Password\"\r\n                    rules={[{ required: true, message: 'Minimo 8 caracteres', min: 8 }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"TypeID\"\r\n                    label=\"Tipo:\"\r\n                    rules={[{ required: true, message: 'Seleccione un tipo' }]}>\r\n                    <Select\r\n                        placeholder=\"Seleccione el tipo de cuenta\"\r\n                    >\r\n                        {types}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        size={'large'}\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Crear\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            {props.mutationLoading &&\r\n                <div className=\"spinner-border text-warning\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            }\r\n            {props.mutationError &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    {props.mutationError.message.substring(19)}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\n\r\nimport { Form, InputNumber, Button } from 'antd';\r\n\r\nconst ValidateAcount = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto\">Validar Cuenta</h1>\r\n            <p>Su cuenta fue creada exitosamente, pero para poder utilizar la cuenta hay que validarla con el correo electrónico. En el formulario de abajo ingrese el código de verificación enviado al correo electrónico con el que creó la cuenta.</p>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onFinish}\r\n                layout={'vertical'}\r\n                size={'large'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Codigo de verificacion.\"\r\n                    name=\"vcode\"\r\n                    rules={[{ required: true, type: 'number', message: 'Por favor ingrese un codigo valido' }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <br/>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Validar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            {props.mutationLoading &&\r\n                <div className=\"spinner-border text-warning\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            }\r\n            {props.mutationError &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    {props.mutationError.message.substring(19)}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAcount;","import React from 'react';\r\n\r\nimport correct from '../../../shared/images/correct.webp';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst IsValid = (props) => {\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto\">Cuenta creada y validada exitosamente</h1>\r\n            <img alt=\"correct\" src={correct} style={{ width: \"80px\" }} className=\"m-0\" />\r\n            <br />\r\n            <br />\r\n            <Link to=\"/login\">\r\n                <button type=\"button\" className=\"btn btn-warning mr-2 btn-lg\">Ingresar</button>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IsValid;","import React, { useState } from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nimport RegisterForm from './RegisterForm';\r\nimport ValidateAccount from './ValidateAccount';\r\nimport IsValid from './IsValid';\r\n\r\nconst GET_TYPES = gql`\r\n  {\r\n    authGetTypes{\r\n        ID\r\n        Name\r\n      }\r\n  }\r\n`;\r\n\r\nconst CREATE_USER = gql`\r\n  mutation CreateUser($Email: String!, $Password: String!, $TypeID: Int!){\r\n        authCreateUser(authUserData: {Email: $Email, Password: $Password, TypeID: $TypeID})\r\n  }\r\n`;\r\n\r\nconst VALIDATE_USER = gql`\r\n  mutation ValidateUser($Email: String!, $Vcode: Int!){\r\n    authVerifyAcount(email: $Email, vcode: $Vcode)\r\n  }\r\n`;\r\n\r\nconst Register = () => {\r\n\r\n    const [registerState, setRegisterState] = useState({ account: false, verified: false, email: '' });\r\n\r\n    const { loading: queryLoading, error: queryError, data } = useQuery(GET_TYPES);\r\n    const [createUser, { loading: mutationLoading, error: mutationError }] = useMutation(CREATE_USER, { errorPolicy: 'all' });\r\n    const [validateUser, { loading: mutationLoading2, error: mutationError2 }] = useMutation(VALIDATE_USER, { errorPolicy: 'all' });\r\n\r\n    if (queryLoading) return (\r\n        <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    );\r\n\r\n    if (queryError) return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            {queryError.message}\r\n        </div>\r\n    );\r\n\r\n    const onSubmitUser = async values => {\r\n        try {\r\n            await createUser({ variables: { Email: values.Email, Password: values.Password, TypeID: values.TypeID } });\r\n            setRegisterState({ ...registerState, account: true, email: values.Email })\r\n        } catch (e) { }\r\n    };\r\n\r\n    const onSubmitValidate = async values => {\r\n        try {\r\n            await validateUser({ variables: { Email: registerState.email, Vcode: values.vcode } });\r\n            setRegisterState({ ...registerState, verified: true })\r\n        } catch (e) { }\r\n    };\r\n\r\n    if (registerState.account && registerState.verified) {\r\n        return (\r\n            <IsValid />\r\n        );\r\n    }\r\n    if (registerState.account) {\r\n        return (\r\n            <ValidateAccount\r\n                onFinish={onSubmitValidate}\r\n                mutationLoading={mutationLoading2}\r\n                mutationError={mutationError2}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <RegisterForm\r\n            data={data}\r\n            onFinish={onSubmitUser}\r\n            mutationLoading={mutationLoading}\r\n            mutationError={mutationError}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nimport register_side from '../../../shared/images/register_side.webp';\r\nimport '../../../shared/css/images.css';\r\n\r\nimport LandigPageNavbar from '../components/LandingPageNavbar';\r\nimport Register from '../components/Register';\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <>\r\n            <LandigPageNavbar />\r\n            <div className=\"container-fluid pl-0\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 d-none d-sm-block\">\r\n                        <img className=\"img-fluid BackgroundImage\" src={register_side} alt=\"Responsive\" />\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 text-center m-0\" style={{padding: \"9%\"}}>\r\n                        <Register/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, InputNumber, Button , Input} from 'antd';\r\n\r\nconst VALIDATE_USER = gql`\r\n  mutation ValidateUser($Email: String!, $Vcode: Int!){\r\n    authVerifyAcount(email: $Email, vcode: $Vcode)\r\n  }\r\n`;\r\n\r\nconst ValidateAcount = (props) => {\r\n\r\n    const [validateUser, { loading: mutationLoading, error: mutationError }] = useMutation(VALIDATE_USER, { errorPolicy: 'all' });\r\n\r\n    const onSubmitValidate = async values => {\r\n        try {\r\n            await validateUser({ variables: { Email: values.Email, Vcode: values.vcode } });\r\n            props.validated();\r\n        } catch (e) { }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"TitleFontTypeRoboto\">Validar Cuenta</h1>\r\n            <p>Su cuenta fue creada exitosamente, pero para poder utilizar la cuenta hay que validarla con el correo electrónico. En el formulario de abajo ingrese el código de verificación enviado al correo electrónico con el que creó la cuenta.</p>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onSubmitValidate}\r\n                layout={'vertical'}\r\n                size={'large'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Correo\"\r\n                    name=\"Email\"\r\n                    rules={[{ required: true, type: 'email', message: 'Por favor ingrese un correo valido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Codigo de verificacion.\"\r\n                    name=\"vcode\"\r\n                    rules={[{ required: true, type: 'number', message: 'Por favor ingrese un codigo valido' }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Validar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            {mutationLoading &&\r\n                <div className=\"spinner-border text-warning\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            }\r\n            {mutationError &&\r\n                <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                    {mutationError.message.substring(19)}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAcount;","import React, { useState } from 'react';\r\n\r\nimport login_side from '../../../shared/images/login_side.webp';\r\nimport '../../../shared/css/images.css';\r\n\r\nimport LandigPageNavbar from '../components/LandingPageNavbar';\r\nimport ValidateForm from '../components/ValidateForm';\r\nimport IsValdid from '../components/IsValid';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [isSuccesfull, setIsSuccesfull] = useState(false);\r\n\r\n    const validated = () => {\r\n        setIsSuccesfull(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LandigPageNavbar />\r\n            <div className=\"container-fluid pl-0\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6 d-none d-sm-block\">\r\n                        <img className=\"img-fluid BackgroundImage\" src={login_side} alt=\"Responsive\" />\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 text-center m-0\" style={{ padding: \"9%\" }}>\r\n                        {isSuccesfull ? <IsValdid /> : <ValidateForm validated={validated} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport LandingPage from \"../../../ui/authentication/pages/LandingPage\";\r\nimport LoginPage from \"../../../ui/authentication/pages/LoginPage\";\r\nimport RegisterPage from \"../../../ui/authentication/pages/RegisterPage\";\r\nimport ValidatePage from \"../../../ui/authentication/pages/ValidatePage\";\r\n\r\n\r\nfunction DefaultSwitch() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/'> <LandingPage/> </Route>\r\n            <Route exact path='/login'> <LoginPage/> </Route>\r\n            <Route exact path='/register'> <RegisterPage/> </Route>\r\n            <Route exact path='/validate'> <ValidatePage/> </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default DefaultSwitch;\r\n","import React from 'react';\r\n\r\nimport { Carousel } from 'antd';\r\n\r\nconst Carrousel = (props) => {\r\n    return (\r\n        <Carousel autoplay>\r\n            <div>\r\n                <img src={props.img1} alt={props.alt1} style={{ width: \"100%\" }} />\r\n            </div>\r\n            <div>\r\n                <img src={props.img2} alt={props.alt2} style={{ width: \"100%\" }} />\r\n            </div>\r\n            <div>\r\n                <img src={props.img3} alt={props.alt3} style={{ width: \"100%\" }} />\r\n            </div>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default Carrousel;","import React from 'react';\r\n\r\nimport blacklogo from '../../../shared/images/blacklogo.webp';\r\nimport trainer1 from '../../../shared/images/trainer1.webp';\r\nimport trainer2 from '../../../shared/images/trainer2.webp';\r\nimport trainer3 from '../../../shared/images/trainer3.webp';\r\nimport running_people from '../../../shared/images/running_people.webp';\r\nimport fitness_girl from '../../../shared/images/fitness_girl.webp';\r\nimport profile_logo from '../../../shared/images/profile_logo.webp';\r\n\r\nimport Carrousel from '../../../shared/components/Carrousel';\r\nimport Footer from '../../../shared/components/Footer';\r\n\r\nconst UserHomePage = () => {\r\n  return (\r\n    <>\r\n      <Carrousel\r\n        img1={trainer1}\r\n        img2={trainer2}\r\n        img3={trainer3}\r\n        alt1={\"BodySoft\"}\r\n        alt2={\"BodySoft\"}\r\n        alt3={\"BodySoft\"}\r\n      />\r\n      <br />\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <h1 className=\"FontDarkColor font-italic text-uppercase  mt-1 d-block d-sm-none\">BodySoft</h1>\r\n            <h1 className=\"FontMaincolor font-italic text-uppercase BigTextFont mt-1 d-block d-sm-none\">TRAINER</h1>\r\n            <h1 className=\"FontDarkColor font-italic text-uppercase BigTextFont mt-1 mb-1 d-none d-sm-block\">BodySoft</h1>\r\n            <h1 className=\"FontMaincolor font-italic text-uppercase MaxTextFont mt-1 d-none d-sm-block\">TRAINER</h1>\r\n            <h3>Con BodySoft vas a podrás hacer que tus conocimientos en el deporte y el fisicoculturismo lleguen a una gran multitud de personas, para que puedas iniciar tu proceso de convertirte en un entrenador reconocido a nivel regional.</h3>\r\n            <br />\r\n            <img align=\"middle\" alt=\"Paseos\" src={blacklogo} width=\"200px\" />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <div className=\"row justify-content-between\">\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={running_people} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={running_people} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Sesiones</h1>\r\n            <h5>Vas a poder ofrecer sesiones personales a las personas, para que putas transmitir tus mejores conocimientos.</h5>\r\n          </div>\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={profile_logo} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={profile_logo} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Perfil</h1>\r\n            <h5>Tendrás tu propio perfil para que todas las personas puedan ver todos tus títulos y logros en el deporte.</h5>\r\n          </div>\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={fitness_girl} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={fitness_girl} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Rutinas</h1>\r\n            <h5>Podrás ofrecer tus mejores rutinas de ejercicio, para que puedas empezar a generar ganancias con tus conocimientos.</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserHomePage;","import React from 'react';\r\n\r\nimport whitelogo from '../images/whitelogo.webp';\r\n\r\nconst LandigPageNavbar = () => {\r\n    return (\r\n        <nav className=\"navbar BlackColor\">\r\n            <img align=\"middle\" alt=\"react\" src={whitelogo} className=\"img-fluid ml-3\" width=\"60px\" />\r\n            <div className=\"d-flex justify-content-end\">\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default LandigPageNavbar;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useApolloClient, useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n    }\r\n`\r\n\r\nconst ASSIGN_PROFILE = gql`\r\n   mutation AssignProfile(\r\n    $token: String!, \r\n    $name: String!, \r\n    $city: String!, \r\n    $telephone: String!, \r\n    $age: Int!, \r\n    $photo: String!, \r\n    $sum_ratings: Int, \r\n    $num_ratings: Int,\r\n    $description: String,\r\n    $work_experience: String,\r\n    $resources: String\r\n    ){\r\n    createProfile(token: $token, body: {\r\n      name: $name,\r\n      city: $city,\r\n      telephone: $telephone,\r\n      age: $age,\r\n      photo: $photo,\r\n      sum_ratings: $sum_ratings,\r\n      num_ratings:$num_ratings,\r\n      description: $description,\r\n      work_experience: $work_experience,\r\n      resources: $resources\r\n    })\r\n  }\r\n`;\r\n\r\nconst AssignProfileForm = () => {\r\n\r\n  const client = useApolloClient();\r\n\r\n  const { data: cache } = useQuery(GET_AUTH_DATA);\r\n  const [AssignProfile, { data, loading, error }] = useMutation(ASSIGN_PROFILE, { errorPolicy: 'all' });\r\n\r\n  const onSubmitValidate = async values => {\r\n    try {\r\n      await AssignProfile({\r\n        variables: {\r\n          token: cache.token,\r\n          name: values.name,\r\n          city: values.city,\r\n          telephone: values.telephone,\r\n          age: values.age,\r\n          photo: 'none',\r\n          sum_ratings: 0,\r\n          num_ratings: 0,\r\n          description: values.description,\r\n          work_experience: values.work_experience,\r\n          resources: values.resources\r\n        }\r\n      });\r\n    } catch (e) { }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-border text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data) {\r\n    client.writeData({ data: { profile: true } });\r\n    localStorage.setItem(\"profile\", \"true\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onSubmitValidate}\r\n        layout={'vertical'}\r\n        size={'small'}\r\n      >\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Ciudad:\"\r\n          name=\"city\"\r\n          rules={[{ required: true, message: 'Por favor ingrese una ciudad válida' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Telefono:\"\r\n          name=\"telephone\"\r\n          rules={[{ required: true, message: 'Por favor ingrese un telefono valido' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Edad:\"\r\n          name=\"age\"\r\n          rules={[{ required: true, type: 'number', message: 'Por favor ingrese una edad válida', min: 10, max: 120 }]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Descripción:\"\r\n          name=\"description\"\r\n          rules={[{ required: true, message: 'Por favor ingrese una descripción' }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Experiencia laboral:\"\r\n          name=\"work_experience\"\r\n          rules={[{ required: true, message: 'Por favor ingrese su experiencia laboral' }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Recursos:\"\r\n          name=\"resources\"\r\n          rules={[{ required: true, message: 'Por favor ingrese sus recursos' }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <br />\r\n        <Form.Item >\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            size={'large'}\r\n            style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n          >\r\n            Crear\r\n            </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {(error) &&\r\n        <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n          {error.message.substring(19)}\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AssignProfileForm;","import React from 'react';\r\n\r\nimport box from '../../../../shared/images/box.webp';\r\n\r\nimport BlankNavBar from '../../../../shared/components/BlankNavBar';\r\nimport AssignProfileForm from '../components/AssignProfileForm';\r\n\r\nconst TrainerAddProfile = () => {\r\n  \r\n  return (\r\n    <div className=\"RealBlackColor\">\r\n      <BlankNavBar />\r\n      <div className=\"BackgroundImageContainer\">\r\n        <img align=\"middle\" alt=\"react\" src={box} className=\"BackgroundDarkImageHuge\" />\r\n        <div className=\"container ContentOverImageTop\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col text-center\">\r\n              <h1 className=\"FontMaincolor\">Ingresa tus datos personales</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"card text-center\" style={{ padding : \"9%\" }}>\r\n                <AssignProfileForm />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrainerAddProfile;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport '../../../../shared/css/colors.css'\r\nimport '../css/trainerSession.css'\r\nimport '../css/cards.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Typography, Row, Col, List, Popover, Button, Card, Input } from 'antd';\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\n\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nconst { Title, } = Typography;\r\nconst { Search } = Input;\r\n\r\nconst GET_SESSIONS = gql`\r\n  query GetSessions($Token:String!){\r\n    getAllbyId(Token:$Token){\r\n      id_schedule\r\n      idCoach\r\n      status{\r\n        id\r\n        nameStatus\r\n      }\r\n      daySession\r\n      iniTime\r\n      endTime\r\n      idUser\r\n    }\r\n  }\r\n`\r\n\r\nconst GET_TOKEN = gql`\r\nquery getToken{\r\n  token @client\r\n  type @client\r\n}\r\n`\r\n\r\nconst CREATE_SESSION = gql`\r\nmutation createSession($token:String!,$daySession:String!,$iniTime:String!,$endTime:String!){\r\n  registerSchedules(schedule: {\r\n    token: $token\r\n    daySession: $daySession\r\n    iniTime: $iniTime\r\n    endTime: $endTime\r\n  }){\r\n    id_schedule\r\n    idCoach\r\n    daySession\r\n    iniTime\r\n    endTime\r\n    status {\r\n      id\r\n      nameStatus\r\n    }\r\n    idUser\r\n  }\r\n}\r\n`\r\n\r\nconst DELETE_SESSION = gql`\r\nmutation deleteSession($token:String!,$schedule:Int!){\r\n  deleteSchedules(ChangeStatus: {\r\n    token:$token\r\n    schedule:$schedule\r\n  })\r\n}\r\n`\r\nconst DELETE_TAKEN_SESSION = gql`\r\nmutation deleteTakenSession($token:String!,$schedule:Int!){\r\n  CancelADate(ChangeStatus: {\r\n    token:$token,\r\n    schedule:$schedule\r\n  })\r\n}\r\n`\r\n\r\n\r\nconst CHATS_TRAINER = gql`\r\nquery chatsTrainer($token:String!,$userId:ID!){\r\n  chatTrainerUser(token: $token, \r\n    userId:$userId\r\n    ){\r\n    _id\r\n    date\r\n    id_user\r\n    id_trainer\r\n    messages {\r\n      _id\r\n      date\r\n      id_author\r\n      content\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst SEND_MESSAGE = gql`\r\nmutation sendMessage($token:String!,$chatId:ID!,$content:String!){\r\n  createMessageTrainerUser(\r\n  token:$token\r\n  chatId:$chatId\r\n  message: {\r\n      content:$content\r\n    }){\r\n    _id\r\n    date\r\n    id_author\r\n    content\r\n  }\r\n}\r\n`\r\n\r\nconst TrainerSessionHome = () => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n  console.log('token', token)\r\n\r\n  let { data, error, loading } = useQuery(GET_SESSIONS, { variables: { Token: token } });\r\n\r\n  const [cardSession, setCardSession] = useState(null);\r\n\r\n  //console.log('data', data);\r\n  //console.log('error', error);\r\n\r\n  //console.log(\"DIBUJAAAAAAAAA\", dibujar)\r\n\r\n  if (error) {\r\n    return <div>error</div>\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  console.log(\"SESSIONS QUERY\", data);\r\n\r\n  const dayHours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24']\r\n\r\n  return (\r\n    <>\r\n      {cardSession}\r\n      <Row><br /></Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <h1 className=\"TitleFontTypeRoboto mb-0\">Tus sesiones</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row><br /></Row>\r\n      <Row justify=\"center\" >\r\n        <Col xs={23}>\r\n          <Row justify=\"center\"\r\n            style={{ //height: \"500px\", overflow: \"auto\", \r\n              border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n            }}\r\n          >\r\n            <Col xs={3}>\r\n              <Row justify=\"center\"  ><Title level={3}>Horario</Title></Row>\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={dayHours}\r\n                renderItem={item => (\r\n                  <List.Item\r\n                    style={{ border: \"1px solid #e8e8e8\" }}\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={\r\n                        <Row style={{ background: \"white\" }} justify=\"center\" >\r\n                          {item}\r\n                        </Row>\r\n                      }\r\n                      description=\"\"\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <DaysCalendar sessions={data.getAllbyId} onClickHour={(e) => { setCardSession(e) }} />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TrainerSessionHome;\r\n\r\n\r\nconst dateFormatYYYMMDD = (today) => {\r\n  let month = '' + (today.getMonth() + 1);\r\n  let day = '' + today.getDate();\r\n  const year = today.getFullYear();\r\n\r\n  if (month.length < 2)\r\n    month = '0' + month;\r\n  if (day.length < 2)\r\n    day = '0' + day;\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\nconst DaysCalendar = ({ sessions, onClickHour }) => {\r\n\r\n  //console.log(\"DAYCALENDAR\", sessions)\r\n  /*\r\n    sessions.getAllbyId.map(session => {\r\n      //console.log(session);\r\n      //session.hour = session.iniTime.substring(0, 2);\r\n      //session.day = session.daySession.substring(8, 10);\r\n      //session.dateNumber = session.daySession + \"-\" + session.iniTime.substring(0, 2);\r\n      return session;\r\n    })\r\n  */\r\n\r\n  let day1 = new Date();\r\n  let day2 = new Date();\r\n  let day3 = new Date();\r\n  let day4 = new Date();\r\n  let day5 = new Date();\r\n\r\n  day2.setDate(day2.getDate() + 1)\r\n  day3.setDate(day3.getDate() + 2)\r\n  day4.setDate(day4.getDate() + 3)\r\n  day5.setDate(day5.getDate() + 4)\r\n\r\n\r\n  const daysName = [\"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\"];\r\n\r\n\r\n  const day1Format = dateFormatYYYMMDD(day1)\r\n  const day2Format = dateFormatYYYMMDD(day2)\r\n  const day3Format = dateFormatYYYMMDD(day3)\r\n  const day4Format = dateFormatYYYMMDD(day4)\r\n  const day5Format = dateFormatYYYMMDD(day5)\r\n\r\n\r\n  const dayHours = [\r\n    {\r\n      iniTime: \"01:00:00\",\r\n      endTime: \"02:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"02:00:00\",\r\n      endTime: \"03:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"03:00:00\",\r\n      endTime: \"04:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"04:00:00\",\r\n      endTime: \"05:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"05:00:00\",\r\n      endTime: \"06:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"06:00:00\",\r\n      endTime: \"07:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"07:00:00\",\r\n      endTime: \"08:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"08:00:00\",\r\n      endTime: \"09:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"09:00:00\",\r\n      endTime: \"10:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"10:00:00\",\r\n      endTime: \"11:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"11:00:00\",\r\n      endTime: \"12:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"12:00:00\",\r\n      endTime: \"13:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"13:00:00\",\r\n      endTime: \"14:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"14:00:00\",\r\n      endTime: \"15:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"15:00:00\",\r\n      endTime: \"16:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"16:00:00\",\r\n      endTime: \"17:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"17:00:00\",\r\n      endTime: \"18:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"18:00:00\",\r\n      endTime: \"19:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"19:00:00\",\r\n      endTime: \"20:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"20:00:00\",\r\n      endTime: \"21:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"21:00:00\",\r\n      endTime: \"22:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"22:00:00\",\r\n      endTime: \"23:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"23:00:00\",\r\n      endTime: \"24:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"24:00:00\",\r\n      endTime: \"01:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n  ]\r\n\r\n  const sessionsDaysData = {\r\n    day1: {\r\n      name: daysName[day1.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day2: {\r\n      name: daysName[day2.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day3: {\r\n      name: daysName[day3.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day4: {\r\n      name: daysName[day4.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day5: {\r\n      name: daysName[day5.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    }\r\n  }\r\n\r\n  sessionsDaysData.day1.hours.forEach(\r\n    hour => {\r\n\r\n      hour.daySession = day1Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day2.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day2Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day3.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day3Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day4.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day4Format.slice();\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day5.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day5Format.slice();\r\n    }\r\n  )\r\n\r\n\r\n  sessions.forEach(\r\n    session => {\r\n      switch (session.daySession) {\r\n        case day1Format:\r\n          sessionsDaysData.day1.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day2Format:\r\n          sessionsDaysData.day2.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day3Format:\r\n          sessionsDaysData.day3.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day4Format:\r\n          sessionsDaysData.day4.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day5Format:\r\n          sessionsDaysData.day5.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  )\r\n\r\n  console.log('DAYSCOMPONENT', sessionsDaysData)\r\n\r\n  return (\r\n    <>\r\n      <DayComponent name={sessionsDaysData.day1.name} dayNumber={1} hours={sessionsDaysData.day1.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day2.name} dayNumber={2} hours={sessionsDaysData.day2.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day3.name} dayNumber={3} hours={sessionsDaysData.day3.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day4.name} dayNumber={4} hours={sessionsDaysData.day4.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day5.name} dayNumber={5} hours={sessionsDaysData.day5.hours} onClickHour={onClickHour} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst DayComponent = ({ dayNumber, name, hours, onClickHour }) => {\r\n\r\n  return (\r\n    <Col xs={4} justify=\"center\">\r\n      <Row justify=\"center\"><Title level={3}>{name}</Title></Row>\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={hours}\r\n        renderItem={\r\n          item => {\r\n            let { id, nameStatus } = item.status;\r\n            //console.log(\"ITEM\", item.status)\r\n            let content;\r\n            let color;\r\n            let card;\r\n            let cursor;\r\n            if (dayNumber === 1) {\r\n              switch (id) {\r\n                case 4:\r\n                  color = \"#8c8c8c\"\r\n                  content = \"Esta sesion ya termino\"\r\n                  break;\r\n                default:\r\n                  nameStatus = null;\r\n                  color = \"white\";\r\n                  break;\r\n              }\r\n              return (\r\n                <ListItem cursor={cursor} color={color} onClick={\r\n                  () => {\r\n                    onClickHour(card)\r\n                  }}\r\n                  nameStatus={nameStatus}\r\n                />\r\n              )\r\n            }\r\n\r\n            switch (id) {\r\n              case 1:\r\n                color = \"#7cb305\"\r\n                content = \"Esperando a que un usuario escoja este horario\"\r\n                cursor = \"pointer\";\r\n                card = <CardAvailable onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                break;\r\n              case 2:\r\n                color = \"#096dd9\"\r\n                content = \"Este horario ha sido seleccionado por un usuario\"\r\n                cursor = \"pointer\";\r\n                card = <CardTaken onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                break;\r\n              case 4:\r\n                color = \"#8c8c8c\"\r\n                content = \"Esta sesion ya termino\"\r\n                break;\r\n              default:\r\n                content = \"Puedes crear una sesion en este horario\";\r\n                color = \"white\";\r\n                card = <CardFree onClickExit={() => onClickHour(null)} name={name} hourSession={item} />;\r\n                cursor = \"pointer\";\r\n                //nameStatus = \"Libre\";\r\n                break;\r\n            }\r\n\r\n            return (\r\n              <Popover placement=\"topLeft\" title={nameStatus} content={content}>\r\n                <div>\r\n                  <ListItem cursor={cursor} color={color} onClick={\r\n                    () => {\r\n                      onClickHour(card)\r\n                    }}\r\n                    nameStatus={nameStatus}\r\n                  />\r\n                </div>\r\n              </Popover>\r\n            )\r\n          }}\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst ListItem = ({ color, cursor, onClick, nameStatus }) => {\r\n  return (\r\n    <div>\r\n      <List.Item\r\n        style={{ border: \"1px solid #e8e8e8\", backgroundColor: color, cursor: cursor }}\r\n        type=\"primary\"\r\n        onClick={() => onClick()}\r\n      >\r\n        <List.Item.Meta\r\n          title={\r\n            <div>\r\n              <Row style={{ color: \"white\" }} justify=\"center\" >\r\n                {nameStatus}\r\n                <br />\r\n              </Row>\r\n            </div>\r\n          }\r\n          description={\r\n            <Row justify=\"center\" style={{ color: \"black\", fontWeight: \"500\" }}>\r\n\r\n            </Row>\r\n          }\r\n        />\r\n      </List.Item>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst CardFree = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { iniTime, daySession, endTime } = hourSession;\r\n\r\n  const schedule = {\r\n    token: token,\r\n    daySession: daySession,\r\n    iniTime: iniTime,\r\n    endTime: endTime\r\n  }\r\n\r\n  const [registerSchedules] = useMutation(\r\n    CREATE_SESSION,\r\n    {\r\n      update(cache, { data: { registerSchedules } }) {\r\n        const { getAllbyId } = cache.readQuery({ query: GET_SESSIONS, variables: { Token: token } });\r\n        cache.writeQuery({\r\n          query: GET_SESSIONS, variables: { Token: token },\r\n          data: { getAllbyId: getAllbyId.concat([registerSchedules]) },\r\n        })\r\n      }\r\n    }\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincardChat\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<h2>Añadir sesión </h2>} bordered={false}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#ffbc02\", borderColor: \"#e3a765\", width: \"100%\", color: \"#231F20\" }}\r\n                  onClick={() => {\r\n                    registerSchedules({ variables: schedule });\r\n                    onClickExit();\r\n                  }}\r\n                >Crear</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardAvailable = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { iniTime } = hourSession;\r\n\r\n  console.log(\"id_schedule\", hourSession.id_schedule)\r\n\r\n  const variables = {\r\n    token: token,\r\n    schedule: hourSession.id_schedule\r\n  }\r\n\r\n  const [deleteSchedules] = useMutation(\r\n    DELETE_SESSION,\r\n    {\r\n      update(cache) {\r\n        const { getAllbyId } = cache.readQuery({ query: GET_SESSIONS, variables: { Token: token } });\r\n        cache.writeQuery({\r\n          query: GET_SESSIONS, variables: { Token: token },\r\n          data: { getAllbyId: getAllbyId.filter(session => session.id_schedule !== hourSession.id_schedule) },\r\n        })\r\n      }\r\n    }\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincard\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<h2>Eliminar sesión </h2>} bordered={false}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#cf1322\", borderColor: \"#820014\", width: \"100%\", color: \"white\" }}\r\n\r\n                  onClick={() => {\r\n                    deleteSchedules({ variables: variables });\r\n                    onClickExit();\r\n                  }}\r\n                >Eliminar</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardTaken = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { iniTime } = hourSession;\r\n\r\n  //console.log(\"id_schedule\", hourSession.id_schedule)\r\n\r\n  const variables = {\r\n    token: token,\r\n    schedule: hourSession.id_schedule\r\n  }\r\n\r\n  const [deleteSchedules] = useMutation(\r\n    DELETE_TAKEN_SESSION,\r\n    {\r\n      update(cache) {\r\n        const { getAllbyId } = cache.readQuery({ query: GET_SESSIONS, variables: { Token: token } });\r\n\r\n        cache.writeQuery({\r\n          query: GET_SESSIONS, variables: { Token: token },\r\n          data: { getAllbyId: getAllbyId.filter(session => session.id_schedule !== hourSession.id_schedule) },\r\n        })\r\n      }\r\n    }\r\n  )\r\n\r\n  //mensajes\r\n  const [menssage, setMenssage] = useState(\"\");\r\n\r\n  //const [messages, setMessages] = useState([]);\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n\r\n\r\n  const { loading, error, data } = useQuery(CHATS_TRAINER, {\r\n    variables: { token, userId: hourSession.idUser },\r\n    skip:false,\r\n    pollInterval: 1000,\r\n  });\r\n\r\n  //console.log(\"DATA\", data);\r\n\r\n  const messages = (data && data.chatTrainerUser && data.chatTrainerUser.messages) || [];\r\n\r\n  //console.log(\"messages\", messages);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current && messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n\r\n  //send message\r\n\r\n  const [sendMessage] = useMutation(\r\n    SEND_MESSAGE\r\n  )\r\n\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n      {error.message.substring(19)}\r\n    </div>\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"spinner-border text-warning\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincardChat\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<h2>Eliminar sesión </h2>} bordered={false}>\r\n          <Row style={{\r\n            border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n          }} >\r\n            <Col xs={24} style={{ height: \"300px\" }}>\r\n              <Row style={{ overflow: \"auto\", height: \"300px\", }}>\r\n                <Col xs={24} style={{ height: \"300px\" }}></Col>\r\n                {messages.map(message => {\r\n                  if (data.chatTrainerUser.id_trainer === message.id_author){\r\n                    return (\r\n                      <Col key={message._id} xs={24}>\r\n                        <Row key={message._id} justify=\"end\">\r\n                          <p key={message._id} style={{\r\n                            border: \"1px solid #d3e7c2\", borderRadius: \"4px\", backgroundColor: \"#d3e7c2\", paddingLeft: \"10px\", paddingRight: \"10px\",\r\n                            maxWidth: \"80%\", wordBreak: \"break-all\",\r\n                          }}>{message.content}</p>\r\n                        </Row>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  return (\r\n                      <Col key={message._id} xs={24}>\r\n                        <Row key={message._id}>\r\n                          <p key={message._id} style={{\r\n                            border: \"1px solid #e8e8e8\", borderRadius: \"4px\", backgroundColor: \"#f0f0f0\", paddingLeft: \"10px\", paddingRight: \"10px\",\r\n                            maxWidth: \"80%\", wordBreak: \"break-all\",\r\n                          }}>{message.content}</p>\r\n                        </Row>\r\n                      </Col>\r\n                    )\r\n                }\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </Row>\r\n            </Col>\r\n            <Search\r\n              placeholder=\"Escribe el mensaje que deseas enviar\"\r\n              enterButton={<CheckOutlined />}\r\n              size=\"large\"\r\n              value={menssage}\r\n              onChange={e => {\r\n                //console.log(\"VALUE\", e.target.value);\r\n                setMenssage(e.target.value);\r\n              }}\r\n              onSearch={value => {\r\n                //console.log(value);\r\n                setMenssage(\"\")\r\n                if (value) {\r\n                  sendMessage({\r\n                    variables: {\r\n                      chatId: data.chatTrainerUser._id,\r\n                      token,\r\n                      content: menssage\r\n                    }\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#cf1322\", borderColor: \"#820014\", width: \"100%\", color: \"white\" }}\r\n\r\n                  onClick={() => {\r\n                    deleteSchedules({ variables: variables });\r\n                    onClickExit();\r\n                  }}\r\n                >Eliminar</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport '../css/scroll.css';\r\n\r\nconst TitleCard = (props) => {\r\n    return (\r\n        <div className=\"card m-3 \">\r\n            <div className=\"card-body\">\r\n                <p>Nombre:</p>\r\n                <h5 className=\"card-title\">{props.degree_name}</h5>\r\n                <p>Institucion:</p>\r\n                <h5 className=\"card-title\">{props.institution}</h5>\r\n                <p>Año:</p>\r\n                <h5 className=\"card-title\">{props.year}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DegreesList = (props) => {\r\n\r\n    if (!props.degreesData) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let degreeList = [];\r\n\r\n    if (props.degreesData.length !== 0) {\r\n        props.degreesData.map((degree, index) => {\r\n            degreeList.push(\r\n                <TitleCard\r\n                    key={index}\r\n                    degree_name={degree.degree_name}\r\n                    institution={degree.institution}\r\n                    year={degree.year}\r\n                />\r\n            )\r\n            return null;\r\n        });\r\n    } else {\r\n        return (\r\n            <div className=\"WhiteColor border p-3 mb-3\">\r\n                <h4 className=\"FontDarkMainColor\">Usted actualmente no cuenta con títulos asignados a su perfil</h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"WhiteColor border p-3 mb-3\">\r\n            <h3 className=\"FontDarkMainColor\">Titulos</h3>\r\n            <div className=\"scroll Background border\">\r\n                {degreeList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DegreesList;","import React from 'react';\r\n\r\nimport '../css/scroll.css';\r\n\r\nconst TitleCard = (props) => {\r\n    return (\r\n        <div className=\"MainGradient p-2 mb-2 text-center border\">\r\n            <h5 className=\"p-0 m-0\">{props.speciality}</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SpecialitiesList = (props) => {\r\n\r\n    if (!props.specialities) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let specialitiesList = [];\r\n\r\n    if (props.specialities.length !== 0) {\r\n        props.specialities.map((speciality, index) => {\r\n            specialitiesList.push(\r\n                <TitleCard\r\n                    key={index}\r\n                    speciality={speciality}\r\n                />\r\n            )\r\n            return null;\r\n        });\r\n    } else {\r\n        return (\r\n            <div className=\"WhiteColor border p-3 mb-3\">\r\n                <h4 className=\"FontDarkMainColor\">Usted actualmente no cuenta con especialidades asignadas a su perfil</h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"WhiteColor border p-3 mb-3\">\r\n            <h3 className=\"FontDarkMainColor\">Especialidades</h3>\r\n            {specialitiesList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpecialitiesList;","import React, { Component } from 'react';\r\nimport './backdropimg.css'\r\n\r\n\r\nclass Backdrop extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"backdropimg\" onClick={()=>{this.props.onClickCancelar()}}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Backdrop };","import React, { Component } from 'react';\r\nimport './img_card.css';\r\n\r\nclass UploadCard extends Component {\r\n    state = {\r\n        imageurl: null,\r\n        previsualization: this.props.foto,\r\n    }\r\n\r\n    fileselectedhandler = event => {\r\n        const file =  event.target.files[0]\r\n        if (file) {\r\n            this.setState({\r\n                imageurl: file,\r\n                previsualization: URL.createObjectURL(file)\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let percentageImageLoading = this.props.percentageImageLoading;\r\n\r\n        let uploadbar;\r\n\r\n        if (percentageImageLoading) {\r\n            uploadbar =\r\n                <div className=\"progress\" style={{ width: \"100%\" }}>\r\n                    <div\r\n                        className=\"progress-bar progress-bar-striped bg-success\"\r\n                        role=\"progressbar\"\r\n                        style={{ width: percentageImageLoading + \"%\" }}\r\n                        aria-valuenow=\"25\" aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                    ></div>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"maincard\">\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">Seleccione una imagen de su ordenador</h3>\r\n                        <br />\r\n                        <div className=\"custom-file\">\r\n                            <input type=\"file\"\r\n                                className=\"custom-file-input\"\r\n                                id=\"customFileLang\"\r\n                                lang=\"es\"\r\n                                onChange={this.fileselectedhandler}\r\n                            />\r\n                            <label className=\"custom-file-label\" htmlFor=\"customFileLang\">Seleccionar archivo</label>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <img className=\"uploadimg\" src={this.state.previsualization} alt=\"\" />\r\n                        <br />\r\n                        <br />\r\n                        {uploadbar}\r\n                        <br />\r\n                        <br />\r\n                        <button type=\"button\" className=\"btn btn-outline-warning\" onClick={\r\n                            () => {\r\n                                this.props.onClickActualizar(this.state.imageurl)\r\n                            }\r\n                        }>Actualizar</button>\r\n                        <br />\r\n                        <br />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger\"\r\n                            onClick={() => this.props.onClickCancelar()}\r\n                        >Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { UploadCard };","import React from 'react';\r\nimport { Backdrop } from './cons_uplo_backdrop/backdropimg'\r\nimport { UploadCard } from './upload_card/upload_card';\r\n\r\n\r\nfunction UploadPage(props) {\r\n    return (\r\n        <>\r\n            <UploadCard\r\n                onClickCancelar={() => props.onClickCancelar()}\r\n                foto={props.foto}\r\n                onClickActualizar={(img) => props.onClickActualizar(img)}\r\n                percentageImageLoading = {props.percentageImageLoading}\r\n            />\r\n            <Backdrop onClickCancelar={props.onClickCancelar} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UploadPage;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDY-tyiqqrHKe-2xE1GRP8-qmelr1SwmFU\",\r\n    authDomain: \"body-soft.firebaseapp.com\",\r\n    databaseURL: \"https://body-soft.firebaseio.com\",\r\n    projectId: \"body-soft\",\r\n    storageBucket: \"body-soft.appspot.com\",\r\n    messagingSenderId: \"762940100621\",\r\n    appId: \"1:762940100621:web:f67269b911c300de2b8544\",\r\n    measurementId: \"G-E47R44VDQF\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React from 'react';\r\n\r\nimport DegreesList from './DegreesList';\r\nimport SpecialitiesList from './SpecialitiesList';\r\nimport { useState } from 'react';\r\nimport UploadPage from './upload_page/upload_page';\r\n\r\nimport fire from \"../../../../fire/Fire\"\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nfunction storageData(ref, img) {\r\n  return fire.storage().ref(ref).put(img);\r\n}\r\n\r\nconst GET_TOKEN = gql`\r\nquery getToken{\r\n  token @client\r\n  type @client\r\n}\r\n`\r\n\r\nconst GET_PROFILE = gql`\r\n  query GetProfile($token: String!){\r\n    profileTrainer(token: $token){\r\n      trainer_name,\r\n      age,\r\n      photo,\r\n      telephone,\r\n      city,\r\n      description,\r\n      specialities,\r\n      resources,\r\n      work_experience,\r\n      sum_ratings,\r\n      num_ratings\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ID = gql`\r\nquery getID($token: String!){\r\n  authValidateAuthToken(token:$token) {\r\n    ID\r\n  }\r\n}\r\n`\r\n\r\nconst UPDATE_PROFILE = gql`\r\nmutation updateProfile($token:String!,$trainer_name:String!,$age:Int!,$photo:String!,$telephone:String!,$city:String!,$sum_ratings:Int!,$num_ratings:Int!,$description:String!,$work_experience:String!,$resources:String!){\r\n  updateProfileTrainer(token:$token\r\n  body:{\r\n    trainer_name:$trainer_name,\r\n    age:$age,\r\n    photo:$photo,\r\n    telephone:$telephone,\r\n    city:$city,\r\n    sum_ratings:$sum_ratings,\r\n    num_ratings:$num_ratings,\r\n    description:$description,\r\n    work_experience:$work_experience,\r\n    resources:$resources,\r\n  }) {\r\n    trainer_id\r\n    trainer_name\r\n    age\r\n    photo\r\n    telephone\r\n    city\r\n    sum_ratings\r\n    num_ratings\r\n    description\r\n    work_experience\r\n    resources\r\n  }\r\n}\r\n`\r\n\r\nconst TrainerProfile = (props) => {\r\n\r\n  /*ACTULIZACION DE IMAGEN*/\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { loading: loadingProfile, error: errorProfile, data: dataProfile } = useQuery(GET_PROFILE, {\r\n    variables: { token, }\r\n  });\r\n\r\n  const [uploadImage, setUploadImage] = useState(null);\r\n\r\n  const [updateProfile] = useMutation(UPDATE_PROFILE,\r\n    {\r\n      update(cache) {\r\n\r\n      }\r\n    })\r\n\r\n  const [percentageImageLoading, setPercentageImageLoading] = useState(0)\r\n\r\n\r\n  let { data, error, loading } = useQuery(GET_ID, { variables: { token: token } })\r\n\r\n  if (error || errorProfile) {\r\n    return <div>error</div>\r\n  }\r\n\r\n  if (loading || loadingProfile) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  const id = data.authValidateAuthToken.ID;\r\n\r\n  const perfilImghandler = async (img) => {\r\n    addImagen(\r\n      img,\r\n      id,\r\n      percentage => { setPercentageImageLoading(percentage) },\r\n      error => { console.log(error) },\r\n      () => {\r\n        setPercentageImageLoading(100)\r\n        setUploadImage(null)\r\n      }\r\n    )\r\n  }\r\n\r\n  const variables = dataProfile.profileTrainer;\r\n\r\n  function addImagen(img, id, loadImg, error, fullyLoaded) {\r\n\r\n    const task = storageData(`/TrainerPhotos/${id}`, img);\r\n\r\n    task.on('state_changed',\r\n      snapshot => {\r\n        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        loadImg(percentage)\r\n      },\r\n      error,\r\n      async () => {\r\n        try {\r\n          let url = await task.snapshot.ref.getDownloadURL();\r\n          variables.photo = url;\r\n          variables.token = token;\r\n          console.log(\"URL\", url)\r\n          console.log(\"VARIABLES\", variables)\r\n          updateProfile({ variables: variables });\r\n          fullyLoaded()\r\n        } catch (errorCatch) {\r\n          error(errorCatch)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  /*FIN ACTULIZACION DE IMAGEN*/\r\n\r\n  if (!props.trainerData) {\r\n    return (\r\n      <div className=\"row justify-content-center text-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n  let src;\r\n\r\n  if (props.trainerData.photo !== 'none') {\r\n    src = props.trainerData.photo;\r\n  } else {\r\n    src = \"http://lorempixel.com/400/400/sports/\";\r\n  }\r\n\r\n  /*ACTULIZACION DE IMAGEN*/\r\n\r\n  let uploadImages;\r\n\r\n  if (uploadImage) {\r\n    uploadImages = <UploadPage\r\n      percentageImageLoading={percentageImageLoading}\r\n      onClickCancelar={() => { setUploadImage(null); setPercentageImageLoading(0); }}\r\n      foto={src}\r\n      onClickActualizar={(img) => { perfilImghandler(img) }}\r\n    />\r\n  }\r\n\r\n  /*FIN ACTULIZACION DE IMAGEN*/\r\n\r\n  console.log(\"uploadImages\",uploadImages);\r\n\r\n  return (\r\n    <>\r\n      {uploadImages}\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-3 p-0 \">\r\n            <div className=\"card\">\r\n              <img className=\"card-img-top\" src={src} alt={props.trainerData.trainer_name}\r\n                onClick={\r\n                  () => {\r\n                    setPercentageImageLoading(0);\r\n                    setUploadImage(true)\r\n                  }\r\n                } />\r\n              <div className=\"card-body\">\r\n                <h3 className=\"card-title FontDarkMainColor mb-4\">{props.trainerData.trainer_name}</h3>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Edad:</h6>\r\n                <h5 className=\"card-text\">{props.trainerData.age}</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center my-4\">\r\n              <button className=\"btn btn-warning btn-lg\" onClick={() => { props.goToEditProfile() }}>Editar Perfil</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-5\">\r\n            <div className=\"WhiteColor border p-3 mb-3\">\r\n              <h3 className=\"FontDarkMainColor\">Contacto</h3>\r\n              <p>Telefono:</p>\r\n              <h4>{props.trainerData.telephone}</h4>\r\n              <p>Ciudad:</p>\r\n              <h4>{props.trainerData.city}</h4>\r\n              <h3 className=\"FontDarkMainColor mt-4\">Descripción</h3>\r\n              <h6>{props.trainerData.description}</h6>\r\n              <h3 className=\"FontDarkMainColor mt-4\">Experiencia laboral</h3>\r\n              <h6>{props.trainerData.work_experience}</h6>\r\n              <h3 className=\"FontDarkMainColor mt-4\">Recursos</h3>\r\n              <h6>{props.trainerData.resources}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-4\">\r\n            <DegreesList\r\n              degreesData={props.degreesData}\r\n            />\r\n            <SpecialitiesList\r\n              specialities={props.trainerData.specialities}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TrainerProfile;","import React from 'react';\r\n\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\n\r\nconst TrainerUpdateInfoForm = (props) => {\r\n\r\n    if (!props.trainerData) {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center text-center\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"spinner-border text-warning\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={props.trainerData}\r\n                onFinish={props.onSubmitUpdateProfile}\r\n                layout={'vertical'}\r\n                size={'small'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre\"\r\n                    name=\"trainer_name\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Ciudad:\"\r\n                    name=\"city\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese una ciudad válida' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Telefono:\"\r\n                    name=\"telephone\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un telefono valido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Edad:\"\r\n                    name=\"age\"\r\n                    rules={[{ required: true, type: 'number', message: 'Por favor ingrese una edad válida', min: 10, max: 120 }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Descripción:\"\r\n                    name=\"description\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese una descripción' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Experiencia laboral:\"\r\n                    name=\"work_experience\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese su experiencia laboral' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Recursos:\"\r\n                    name=\"resources\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese sus recursos' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Actualizar\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrainerUpdateInfoForm;","import React from 'react';\r\n\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\n\r\nconst  AddDegreeForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onSubmitDegree}\r\n                layout={'vertical'}\r\n                size={'small'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre Título:\"\r\n                    name=\"degree_name\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Institucion:\"\r\n                    name=\"institution\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Año:\"\r\n                    name=\"year\"\r\n                    rules={[{ required: true, type: 'number', message: 'Por favor ingrese un año valido ', min: 1900, max: 2050 }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Añadir \r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDegreeForm;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { Form, Button, Select } from 'antd';\r\n\r\nconst GET_SPECIALITIES = gql`\r\nquery AddDegree($token: String!){\r\n    profileToAddSpecialitities(token: $token){\r\n        speciality_id\r\n        speciality_name\r\n      }\r\n  }\r\n`;\r\n\r\nconst AddSpecialitiesForm = (props) => {\r\n\r\n    const { loading, error, data } = useQuery(GET_SPECIALITIES, { variables: { token: props.token } });\r\n\r\n    const types = [];\r\n\r\n    const { Option } = Select;\r\n\r\n    if (data) {\r\n        data.profileToAddSpecialitities.map((data) => {\r\n            const value = data.speciality_id + '|' + data.speciality_name;\r\n            types.push(<Option key={data.speciality_id} value={value}> {data.speciality_name}</Option >)\r\n            return null;\r\n        });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onSubmitSpeciality}\r\n                layout={'vertical'}\r\n                size={'small'}\r\n            >\r\n                <Form.Item\r\n                    name=\"speciality\"\r\n                    label=\"Especialidad:\"\r\n                    rules={[{ required: true, message: 'Seleccione una especialidad' }]}>\r\n                    <Select\r\n                        placeholder=\"Especialidades\"\r\n                    >\r\n                        {data && types}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Añadir\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            {error &&\r\n                <div className=\"spinner-border text-warning\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddSpecialitiesForm;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport TrainerUpdateInfoForm from './TrainerUpdateInfoForm';\r\nimport AddDegreeForm from './AddDegreeForm';\r\nimport AddSpecialities from './AddSpecialitiesForm';\r\n\r\nconst ADD_DEGREE = gql`\r\nmutation AddDegree($token: String!, $degree_name: String!, $year: Int!, $institution: String!){\r\n    createProfileDegree(\r\n        token: $token, \r\n        body:{\r\n          degree_name: $degree_name,\r\n          year: $year,\r\n          institution: $institution\r\n        }\r\n      ){\r\n        degree_name,\r\n        year,\r\n        institution,\r\n      }\r\n  }\r\n`;\r\n\r\nconst ADD_SPECIALITY = gql`\r\nmutation AddDegree($token: String!, $speciality: ID!){\r\n    createProfileTrainerSpeciality(\r\n        token: $token, \r\n        body:{\r\n            speciality: $speciality\r\n        }\r\n      ){\r\n        speciality\r\n      }\r\n  }\r\n`;\r\n\r\nconst UPDATE_TRAINER_PROFILE = gql`\r\n   mutation UpdateProfile(\r\n       $token: String!, \r\n       $trainer_name: String!, \r\n       $city: String!, \r\n       $telephone: String!, \r\n       $age: Int!, \r\n       $photo: String!\r\n       $sum_ratings: Int!, \r\n       $num_ratings: Int!,\r\n       $description: String!,\r\n       $work_experience: String!,\r\n       $resources: String!\r\n       ){\r\n    updateProfileTrainer(\r\n        token: $token,\r\n        body: {\r\n            trainer_name: $trainer_name,\r\n            age: $age,\r\n            photo: $photo,\r\n            telephone:  $telephone,\r\n            city: $city,\r\n            description: $description,\r\n            resources: $resources,\r\n            work_experience: $work_experience,\r\n            sum_ratings: $sum_ratings,\r\n            num_ratings: $num_ratings\r\n        }\r\n      ){\r\n        trainer_name,\r\n        age,\r\n        photo,\r\n        telephone,\r\n        city,\r\n        description,\r\n        specialities,\r\n        resources,\r\n        work_experience,\r\n        sum_ratings,\r\n        num_ratings\r\n      }\r\n  }\r\n`;\r\n\r\nconst TrainerEditProfile = (props) => {\r\n\r\n    const [UpdateProfile, { data, loading, error }] = useMutation(UPDATE_TRAINER_PROFILE, { errorPolicy: 'all' });\r\n    const [UpdateDegrees, { data: newDegree, loading: loading2, error: error2 }] = useMutation(ADD_DEGREE, { errorPolicy: 'all' });\r\n    const [UpdateSpeciality, { loading: loading3, error: error3 }] = useMutation(ADD_SPECIALITY, { errorPolicy: 'all' });\r\n\r\n    const onSubmitUpdateProfile = async values => {\r\n        try {\r\n            await UpdateProfile({\r\n                variables: {\r\n                    token: props.token,\r\n                    trainer_name: values.trainer_name,\r\n                    city: values.city,\r\n                    telephone: values.telephone,\r\n                    age: values.age,\r\n                    photo: 'none',\r\n                    sum_ratings: 0,\r\n                    num_ratings: 0,\r\n                    description: values.description,\r\n                    work_experience: values.work_experience,\r\n                    resources: values.resources\r\n                }\r\n            });\r\n        } catch (e) { }\r\n    };\r\n\r\n    const onSubmitDegree = async values => {\r\n        try {\r\n            await UpdateDegrees({\r\n                variables: {\r\n                    token: props.token,\r\n                    degree_name: values.degree_name,\r\n                    year: values.year,\r\n                    institution: values.institution\r\n                }\r\n            });\r\n        } catch (e) { }\r\n    }\r\n\r\n    const onSubmitSpeciality = async values => {\r\n        try {\r\n            const res = values.speciality.split('|')\r\n            await UpdateSpeciality({\r\n                variables: {\r\n                    token: props.token,\r\n                    speciality: res[0],\r\n                }\r\n            });\r\n            props.changedSpeciality(res[1]);\r\n        } catch (e) { }\r\n    }\r\n\r\n    if (data) {\r\n        props.changedProfile(data.updateProfileTrainer);\r\n    }\r\n\r\n    if (newDegree) {\r\n        props.changedDegree(newDegree.createProfileDegree);\r\n    }\r\n\r\n    if (loading || loading2 || loading3) {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center text-center\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"spinner-border text-warning\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-3 text-center\">\r\n                    <div className=\"WhiteColor border p-4 mb-3\">\r\n                        <button className=\"btn btn-warning  mb-0\" onClick={() => { props.goToProfile() }}>Volver</button>\r\n                        <button className=\"btn btn-danger ml-2\" onClick={() => { props.goToChangePass() }}>Contraseña</button>\r\n                    </div>\r\n                    <div className=\"WhiteColor border p-4 mb-3\">\r\n                        <h3>Añadir especialidad</h3>\r\n                        <AddSpecialities\r\n                            token={props.token}\r\n                            onSubmitSpeciality={onSubmitSpeciality}\r\n                        />\r\n                        {(error3) &&\r\n                            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                                Esta especialidad ya está en tu perfil\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 text-center\">\r\n                    <div className=\"WhiteColor border p-4 mb-3\">\r\n                        <h3>Editar Info</h3>\r\n                        <TrainerUpdateInfoForm\r\n                            trainerData={props.trainerData}\r\n                            onSubmitUpdateProfile={onSubmitUpdateProfile}\r\n                        />\r\n                        {(error) &&\r\n                            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                                {error.message.substring(19)}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-4 text-center\">\r\n                    <div className=\"WhiteColor border p-4 mb-3\">\r\n                        <h3>Añadir Título</h3>\r\n                        <AddDegreeForm\r\n                            onSubmitDegree={onSubmitDegree}\r\n                        />\r\n                        {(error2) &&\r\n                            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                                {error2.message.substring(19)}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrainerEditProfile;","import React, { useState } from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n   mutation ChangePassword($token: String!, $password: String!, $newpassword: String!){\r\n    authChagePassword(authChangePass: {\r\n        Token: $token,\r\n        Password: $password,\r\n        NewPassword: $newpassword\r\n      })\r\n  }\r\n`;\r\n\r\nconst ChangePassword = (props) => {\r\n\r\n    const [isSuccesfull, setIsSuccesfull] = useState(false);\r\n    const [UpdateProfile, { loading, error }] = useMutation(CHANGE_PASSWORD, { errorPolicy: 'all' });\r\n\r\n    const onSubmitValidate = async values => {\r\n        try {\r\n            await UpdateProfile({\r\n                variables: {\r\n                    token: props.token,\r\n                    password: values.password,\r\n                    newpassword: values.newpassword,\r\n                }\r\n            });\r\n            setIsSuccesfull(true);\r\n        } catch (e) { }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"row justify-content-center text-center\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"spinner-border text-warning\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let message;\r\n    if (isSuccesfull && !error) {\r\n        message = <div className=\"alert alert-success mb-5\" role=\"alert\">\r\n            Se cambio la contraseña\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-md-6\">\r\n                <div className=\"card text-center mt-5\" style={{ paddingLeft: \"9%\", paddingRight: \"9%\" }}>\r\n                    <h1 className=\"mt-3\">Cambio Contraseña</h1>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={props.userData}\r\n                        onFinish={onSubmitValidate}\r\n                        layout={'vertical'}\r\n                        size={'medium'}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Contraseña Actual:\"\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Minimo 8 caracteres' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Contraseña Nueva:\"\r\n                            name=\"newpassword\"\r\n                            rules={[{ required: true, message: 'Minimo 8 caracteres' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                            >\r\n                                Cambiar\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <button className=\"btn btn-link FontBlackLink mb-0\" onClick={() => { props.goToEditProfile() }}>Volver</button>\r\n                    {message}\r\n                    {(error) &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {error.message.substring(19)}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import React, { useState } from 'react';\r\n\r\nimport box from '../../../../shared/images/box.webp';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport TrainerProfile from '../components/TrainerProfile';\r\nimport TrainerEditProfile from '../components/TrainerEditProfile';\r\nimport ChangePassWord from '../../../../shared/components/ChangePassword';\r\n\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n    }\r\n`;\r\n\r\nconst GET_PROFILE = gql`\r\n  query GetProfile($token: String!){\r\n    profileTrainer(token: $token){\r\n      trainer_name,\r\n      age,\r\n      photo,\r\n      telephone,\r\n      city,\r\n      description,\r\n      specialities,\r\n      resources,\r\n      work_experience,\r\n      sum_ratings,\r\n      num_ratings\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_DEGREES = gql`\r\nquery GetProfile($token: String!){\r\n  profileDegreesByTrainers(token: $token){\r\n    degree_name,\r\n    year,\r\n    institution\r\n  }\r\n}\r\n`\r\n\r\nconst TrainerProfilePage = () => {\r\n\r\n  const [pageState, setPageState] = useState('profile');\r\n  const [trainerData, setTrainerData] = useState(null);\r\n  const [degreesData, setDegreesData] = useState(null);\r\n\r\n  const { data: cache } = useQuery(GET_AUTH_DATA);\r\n  const { loading, error, data, refetch } = useQuery(GET_PROFILE, { variables: { token: cache.token } });\r\n  const { loading: loading2, error: error2, data: degrees, refetch: refetch2 } = useQuery(GET_DEGREES, { variables: { token: cache.token } });\r\n\r\n  const goToProfile = () => {\r\n    setPageState('profile');\r\n  }\r\n\r\n  const goToEditProfile = () => {\r\n    setPageState('edit');\r\n  }\r\n\r\n  const goToChangePass = () => {\r\n    setPageState('pass');\r\n  }\r\n\r\n  const changedProfile = (data) => {\r\n    setTrainerData(data);\r\n    setPageState('profile');\r\n    refetch();\r\n  }\r\n\r\n  const changedDegree = (data) => {\r\n    let degress = degreesData\r\n    degress.push(data)\r\n    setDegreesData(degress);\r\n    setPageState('profile');\r\n    refetch2();\r\n  }\r\n\r\n  const changedSpeciality = (data) => {\r\n    let specialities = trainerData.specialities\r\n    specialities.push(data)\r\n    setTrainerData({ ...trainerData, specialities: specialities });\r\n    setPageState('profile');\r\n    refetch();\r\n  }\r\n\r\n  if (data && !trainerData) {\r\n    setTrainerData(data.profileTrainer);\r\n  }\r\n\r\n  if (degrees && !degreesData) {\r\n    setDegreesData(degrees.profileDegreesByTrainers);\r\n  }\r\n\r\n  if (loading || loading2) {\r\n    return (\r\n      <div className=\"spinner-border text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n        {error.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error2) {\r\n    return (\r\n      <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n        {error2.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  switch (pageState) {\r\n    case 'profile':\r\n      return (\r\n        <TrainerProfile\r\n          goToEditProfile={goToEditProfile}\r\n          trainerData={trainerData}\r\n          degreesData={degreesData}\r\n        />\r\n      );\r\n    case 'edit':\r\n      return (\r\n        <TrainerEditProfile\r\n          trainerData={trainerData}\r\n          token={cache.token}\r\n          goToProfile={goToProfile}\r\n          goToChangePass={goToChangePass}\r\n          changedProfile={changedProfile}\r\n          changedDegree={changedDegree}\r\n          changedSpeciality={changedSpeciality}\r\n        />\r\n      );\r\n    case 'pass':\r\n      return (\r\n        <div className=\"BackgroundImageContainer\">\r\n          <img align=\"middle\" alt=\"react\" src={box} className=\"BackgroundDarkImage\" />\r\n          <div className=\"container ContentOverImage\">\r\n            <ChangePassWord\r\n              token={cache.token}\r\n              goToEditProfile={goToEditProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n  }\r\n}\r\n\r\nexport default TrainerProfilePage;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nconst RoutineCard = (props) => {\r\n  return (\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card h-100 m-2 border\">\r\n        <iframe title={props.name} width=\"100%\" height=\"215\" src={props.linkPreview} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen=\"allowfullscreen\"></iframe>\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title FontMaincolor\">{props.name}</h3>\r\n          <p className=\"pb-0 mb-1\">Descripción:</p>\r\n          <h6 className=\"card-title\">{props.description}</h6>\r\n          <p className=\"pb-0 mb-1\">Precio:</p>\r\n          <h6 className=\"card-title\">{props.price}</h6>\r\n          <p className=\"pb-0 mb-1\">Calificacion:</p>\r\n          <h6 className=\"card-title\">{props.rating}</h6>\r\n          <p className=\"pb-0 mb-1\">Tipo:</p>\r\n          <h6 className=\"card-title\">{props.type}</h6>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button type=\"button\" className=\"btn btn-secondary mr-2\">Gestionar</button>\r\n            <button type=\"button\" className=\"btn btn-warning\">Recursos</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GET_TYPES = gql`\r\n  {\r\n    getAllTypeRoutine{\r\n      id\r\n      name\r\n   }\r\n}\r\n`;\r\n\r\n\r\nconst RoutinesHome = (props) => {\r\n\r\n  const { loading, error, data } = useQuery(GET_TYPES);\r\n\r\n  if (!props.routinesData || loading) {\r\n    return (\r\n      <div className=\"row justify-content-center text-center\">\r\n        <div className=\"col-12 p-0 m-5\">\r\n          <div className=\"spinner-border text-warning m-5\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 p-0 \">\r\n          <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n            {error.message.substring(19)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let RoutinesList = [];\r\n\r\n  if (props.routinesData.length !== 0 && data) {\r\n    props.routinesData.map((routine, index) => {\r\n      data.getAllTypeRoutine.map(type => {\r\n        if (type.id === routine.type.id) {\r\n          RoutinesList.push(\r\n            <RoutineCard\r\n              key={index}\r\n              name={routine.name}\r\n              price={routine.price}\r\n              description={routine.description}\r\n              linkPreview={routine.linkPreview}\r\n              rating={routine.rating}\r\n              type={type.name}\r\n            />\r\n          )\r\n        }\r\n        return null;\r\n      })\r\n      return null;\r\n    });\r\n  } else {\r\n    return (\r\n      <div className=\"text-center m-5 p-5\">\r\n        <div className=\"alert alert-dark\" role=\"alert\">\r\n          <h2>Usted actualmente no cuenta con rutinas creadas</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-md-3\">\r\n      {RoutinesList}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoutinesHome;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button, InputNumber, Select } from 'antd';\r\n\r\nconst GET_TYPES = gql`\r\n  {\r\n    getAllTypeRoutine{\r\n      id\r\n      name\r\n   }\r\n}\r\n`;\r\n\r\nconst AssignProfileForm = (props) => {\r\n\r\n    const { data, loading, error } = useQuery(GET_TYPES, { errorPolicy: 'all' });\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 p-0 \">\r\n                        <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                            {error.message.substring(19)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const types = [];\r\n\r\n    const { Option } = Select;\r\n\r\n    if (data) {\r\n        data.getAllTypeRoutine.map((data) => {\r\n            types.push(<Option key={data.id} value={data.id}> {data.name}</Option >)\r\n            return null;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onSubmitRoutine}\r\n                layout={'vertical'}\r\n                size={'small'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre:\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Link preview:\"\r\n                    name=\"linkPreview\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese link' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Precio:\"\r\n                    name=\"price\"\r\n                    rules={[{ required: true, type: 'number', message: 'Por favor ingrese un precio valido', min: 1 }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Tipo:\"\r\n                    name=\"idType\"\r\n                    rules={[{ required: true, message: 'Seleccione un tipo' }]}>\r\n                    <Select\r\n                        placeholder=\"Tipos\"\r\n                    >\r\n                        {data && types}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Descripción:\"\r\n                    name=\"description\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese una descripción' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Crear\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignProfileForm;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport CreateRoutineForm from './CreateRoutineForm';\r\n\r\nconst CREATE_ROUTINE = gql`\r\nmutation CreateRoutines(\r\n    $token: String!,\r\n    $name: String!,\r\n    $description: String!,\r\n    $link_preview: String!,\r\n    $price: Float!,\r\n    $idType: Int!\r\n    ){\r\n    createRoutine(\r\n        token: $token,\r\n        newRoutine: {\r\n            name: $name,\r\n            description: $description,\r\n            link_preview: $link_preview,\r\n            price: $price,\r\n            idType: $idType\r\n        }\r\n    )\r\n}\r\n`\r\n\r\nconst CreateRoutine = (props) => {\r\n\r\n    const [createRoutine, { loading, error }] = useMutation(CREATE_ROUTINE, { errorPolicy: 'all' });\r\n\r\n    const onSubmitRoutine = async values => {\r\n        try {\r\n            await createRoutine({\r\n                variables: {\r\n                    token: props.token,\r\n                    name: values.name,\r\n                    description: values.description,\r\n                    link_preview: values.linkPreview,\r\n                    price: values.price,\r\n                    idType: parseInt(values.idType)\r\n                }\r\n            })\r\n            const routine = { ...values, rating: 0, type: { id: values.idType } }\r\n            delete routine.idType;\r\n            props.changedRoutine(routine);\r\n        } catch (e) { }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col text-center\">\r\n                    <div className=\"spinner-border text-warning\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col text-center\">\r\n                    <h1 className=\"FontMaincolor\">Crear Rutina</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"card text-center py-2\" style={{ paddingLeft: \"9%\", paddingRight: \"9%\" }}>\r\n                        <CreateRoutineForm\r\n                            onSubmitRoutine={onSubmitRoutine}\r\n                        />\r\n                        <button className=\"btn btn-link FontBlackLink mb-0\" onClick={() => { props.goToRoutinesHome() }}>Volver</button>\r\n                        {(error) &&\r\n                            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                                {error.message.substring(19)}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateRoutine;","import React, { useState } from 'react';\r\n\r\nimport box from '../../../../shared/images/box.webp';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport RoutinesHome from '../components/RoutinesHome';\r\nimport CreateRoutine from '../components/CreateRoutine';\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n    }\r\n`;\r\n\r\nconst GET_ROUTINES = gql`\r\nquery GetRoutines($token: String!){\r\n  getRoutineByIdOwner(token: $token){\r\n    description\r\n    name\r\n    price\r\n    linkPreview\r\n    type {\r\n      id\r\n    }\r\n    rating\r\n  }\r\n}\r\n`\r\n\r\nconst TrainerRoutinesHome = (props) => {\r\n\r\n  const [pageState, setPageState] = useState('routines');\r\n  const [routinesData, setRoutinesData] = useState(null);\r\n\r\n  const { data: cache } = useQuery(GET_AUTH_DATA);\r\n  const { loading, error, data, refetch } = useQuery(GET_ROUTINES, { variables: { token: cache.token } });\r\n\r\n  if (data && !routinesData) {\r\n    setRoutinesData(data.getRoutineByIdOwner);\r\n  }\r\n\r\n  const goToRoutinesHome = () => {\r\n    setPageState('routines');\r\n  }\r\n\r\n  const goToCreateRoutine = () => {\r\n    setPageState('create_routine');\r\n  }\r\n\r\n  const changedRoutine = (data) => {\r\n    let routines = routinesData\r\n    routines.push(data)\r\n    setRoutinesData(routines);\r\n    setPageState('routines');\r\n    refetch();\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-border text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n        {error.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  switch (pageState) {\r\n    case 'routines':\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12\">\r\n              <div className=\"WhiteColor border p-4 m-4\">\r\n                <h1>Tus rutinas</h1>\r\n                <hr/>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => { goToCreateRoutine() }}\r\n                >\r\n                  Crear Rutina\r\n            </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <RoutinesHome\r\n            routinesData={routinesData}\r\n            goToCreateRoutine={goToCreateRoutine}\r\n          />\r\n        </div>\r\n      );\r\n    case 'create_routine':\r\n      return (\r\n        <div className=\"BackgroundImageContainer\">\r\n          <img align=\"middle\" alt=\"react\" src={box} className=\"BackgroundDarkImage\" />\r\n          <div className=\"container ContentOverImage\">\r\n            <CreateRoutine\r\n              token={cache.token}\r\n              goToRoutinesHome={goToRoutinesHome}\r\n              changedRoutine={changedRoutine}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n  }\r\n}\r\n\r\nexport default TrainerRoutinesHome;","import React from 'react';\r\n\r\nimport '../../../../shared/css/colors.css'\r\nimport '../css/trainerSession.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Row, Col, Layout, Menu } from 'antd';\r\n\r\nimport whitelogo from '../../../../shared/images/whitelogo.webp';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = () => {\r\n\r\n    const history = useHistory();\r\n    const client = useApolloClient();\r\n\r\n    return (\r\n        <>\r\n            <Header className=\"BlackColorMenu header\" >\r\n                <div className=\"LogoBodySoft\">\r\n                    <div onClick={()=>history.push('/')} style={{cursor:\"pointer\"}}>\r\n                        <h1 style={{ color: \"#fafafa\" }}><img alt=\"react\" src={whitelogo} className=\"img-fluid ml-3\" width=\"55px\" style={{ marginRight: \"16px\" }} />BodySoft</h1>\r\n                    </div>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <Menu theme=\"dark\" className=\"BlackColorMenu\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n                            <Menu.Item key=\"1\" onClick={() => { history.push('/') }} >Inicio</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => { history.push('/session') }}>Sesiones</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => { history.push('/routines') }}>Rutinas</Menu.Item>\r\n                            <Menu.Item key=\"4\" onClick={() => { history.push('/profile') }} >Perfil</Menu.Item>\r\n                            <Menu.Item key=\"5\" onClick={\r\n                                () => {\r\n                                    client.writeData({\r\n                                        data: {\r\n                                            token: \"\",\r\n                                            type: 0,\r\n                                            profile: false\r\n                                        }\r\n                                    })\r\n                                    localStorage.setItem(\"token\",\"\")\r\n                                    localStorage.setItem(\"type\",0)\r\n                                    localStorage.setItem(\"profile\",\"\")\r\n                                    history.push('/')\r\n                                }\r\n                            } >Cerrar sesion</Menu.Item>\r\n                        </Menu>\r\n                    </Col>\r\n                </Row>\r\n            </Header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\n\r\nimport TrainerHomePage from \"../../../ui/trainer/home/TrainerHomePage\";\r\nimport TrainerAddProfile from \"../../../ui/trainer/profile/pages/TrainerAddProfile\";\r\nimport TrainerSessionHome from '../../../ui/trainer/sessions/pages/TrainerSessionHome';\r\nimport TrainerProfilePage from '../../../ui/trainer/profile/pages/TrainerProfilePage';\r\nimport TrainerRoutinesHomePage from '../../../ui/trainer/routines/pages/TrainerRoutinesHomePage';\r\nimport Navbar from \"../../../ui/trainer/navbar/pages/Navbar\";\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        profile @client\r\n    }\r\n`\r\n\r\nfunction TrainerSwitch() {\r\n\r\n    const { data } = useQuery(GET_AUTH_DATA);\r\n\r\n    console.log(data.profile)\r\n\r\n    if (data.profile) {\r\n        return (\r\n            <>\r\n                <Route path='/' > <Navbar /> </Route>\r\n                <Switch>\r\n                    <Route exact path='/'> <TrainerHomePage /> </Route>\r\n                    <Route exact path='/session'> <TrainerSessionHome /> </Route>\r\n                    <Route exact path='/profile'> <TrainerProfilePage /> </Route>\r\n                    <Route exact path='/routines'> <TrainerRoutinesHomePage /> </Route>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/'> <TrainerAddProfile /> </Route>\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrainerSwitch;\r\n","import React from 'react';\r\n\r\nimport blacklogo from '../../../shared/images/blacklogo.webp';\r\nimport user1 from '../../../shared/images/user1.webp';\r\nimport user2 from '../../../shared/images/user2.webp';\r\nimport user3 from '../../../shared/images/user3.webp';\r\nimport running_people from '../../../shared/images/running_people.webp';\r\nimport fitness_girl from '../../../shared/images/fitness_girl.webp';\r\nimport profile_logo from '../../../shared/images/profile_logo.webp';\r\n\r\nimport Carrousel from '../../../shared/components/Carrousel';\r\nimport Footer from '../../../shared/components/Footer';\r\n\r\nconst UserHomePage = () => {\r\n  return (\r\n    <>\r\n      <Carrousel\r\n        img1={user3}\r\n        img2={user1}\r\n        img3={user2}\r\n        alt1={\"BodySoft\"}\r\n        alt2={\"BodySoft\"}\r\n        alt3={\"BodySoft\"}\r\n      />\r\n      <br />\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 text-center\">\r\n            <h1 className=\"FontDarkColor font-italic text-uppercase  mt-1 d-block d-sm-none\">BodySoft</h1>\r\n            <h1 className=\"FontMaincolor font-italic text-uppercase BigTextFont mt-1 d-block d-sm-none\">USER</h1>\r\n            <h1 className=\"FontDarkColor font-italic text-uppercase BigTextFont mt-1 mb-1 d-none d-sm-block\">BodySoft</h1>\r\n            <h1 className=\"FontMaincolor font-italic text-uppercase MaxTextFont mt-1 d-none d-sm-block\">USER</h1>\r\n            <h3>Con BodySoft vas a poder ponerte en contacto con los mejores entrenadores de la región, podrás tener acceso al mejor contenido online relacionado con el fitness y el deporte de alto rendimiento para que puedas ejercitarte en cualquier lugar.</h3>\r\n            <br />\r\n            <img align=\"middle\" alt=\"Paseos\" src={blacklogo} width=\"200px\" />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <div className=\"row justify-content-between\">\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={running_people} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={running_people} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Sesiones</h1>\r\n            <h5>Con el servicio de Sesiones vas a poder agendar citas personales con los mejores entrenadores de la región.</h5>\r\n          </div>\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={profile_logo} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={profile_logo} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Perfil</h1>\r\n            <h5>Podrás tener tu propio perfil para que el contacto con los entrenadores de la plataforma sea lo más fácil posible.</h5>\r\n          </div>\r\n          <div className=\"col-12 col-md-3 text-center\">\r\n            <img align=\"middle\" alt=\"Paseos\" src={fitness_girl} className=\"mb-3 d-block d-md-none\" width=\"30%\" style={{ margin: \"auto\" }} />\r\n            <img align=\"middle\" alt=\"Paseos\" src={fitness_girl} className=\"img-fluid mb-3 d-none d-md-block\" />\r\n            <h1 className=\"mb-3\">Rutinas</h1>\r\n            <h5>Con el servicio de Rutinas vas a poder acceder a las rutinas de ejercicios de los mejores entrenadores.</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserHomePage;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useApolloClient, useMutation, useQuery} from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n    }\r\n`;\r\n\r\nconst ASSIGN_PROFILE = gql`\r\n   mutation AssignProfile($token: String!, $name: String!, $city: String!, $telephone: String!, $age: Int!, $photo: String!){\r\n    createProfile(token: $token, body: {\r\n      name: $name,\r\n      city: $city,\r\n      telephone: $telephone,\r\n      age: $age,\r\n      photo: $photo\r\n    })\r\n  }\r\n`;\r\n\r\nconst AssignProfileForm = () => {\r\n\r\n  const client = useApolloClient();\r\n\r\n  const { data: cache } = useQuery(GET_AUTH_DATA);\r\n  const [AssignProfile, { data, loading, error }] = useMutation(ASSIGN_PROFILE, { errorPolicy: 'all' });\r\n\r\n  const onSubmitValidate = async values => {\r\n    try {\r\n      await AssignProfile({ variables: { \r\n        token: cache.token,\r\n        name: values.name,\r\n        city: values.city,\r\n        telephone: values.telephone,\r\n        age: values.age,\r\n        photo: 'none'\r\n      } });\r\n    } catch (e) { }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-border text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data) {\r\n    client.writeData({ data: { profile: true } });\r\n    localStorage.setItem(\"profile\", \"true\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onSubmitValidate}\r\n        layout={'vertical'}\r\n        size={'medium'}\r\n      >\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Ciudad:\"\r\n          name=\"city\"\r\n          rules={[{ required: true, message: 'Por favor ingrese una ciudad válida' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Telefono:\"\r\n          name=\"telephone\"\r\n          rules={[{ required: true, message: 'Por favor ingrese un telefono valido' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Edad:\"\r\n          name=\"age\"\r\n          rules={[{ required: true, type: 'number', message: 'Por favor ingrese una edad válida', min: 10, max: 120 }]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <br />\r\n        <Form.Item >\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            size={'large'}\r\n            style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n          >\r\n            Crear\r\n            </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {(error) &&\r\n        <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n          {error.message.substring(19)}\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AssignProfileForm;","import React from 'react';\r\n\r\nimport box from '../../../../shared/images/box.webp';\r\n\r\nimport BlankNavBar from '../../../../shared/components/BlankNavBar';\r\nimport AssignProfileForm from '../components/AssignProfileForm';\r\n\r\nconst UserAddProfile = () => {\r\n\r\n  return (\r\n    <>\r\n      <BlankNavBar />\r\n      <div className=\"BackgroundImageContainer\">\r\n        <img align=\"middle\" alt=\"react\" src={box} className=\"BackgroundDarkImage\" />\r\n        <div className=\"container ContentOverImage\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col text-center\">\r\n              <h1 className=\"FontMaincolor\">Ingresa tus datos personales</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"card text-center\" style={{padding: \"9%\"}}>\r\n                <AssignProfileForm />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserAddProfile;","import React from 'react';\r\n\r\nconst UserProfile = (props) => {\r\n\r\n  if (!props.userData) {\r\n    return (\r\n      <div className=\"row justify-content-center text-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let src;\r\n\r\n  if (props.userData.photo !== 'none') {\r\n    src = props.userData.photo;\r\n  } else {\r\n    src = \"http://lorempixel.com/400/400/sports/\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-12 col-md-4 p-0 text-center\">\r\n        <img className=\"img-fluid d-inline d-md-none mb-5\" src={src} alt={props.userData.user_name} style={{ width: \"150px\" }}/>\r\n        <img className=\"img-fluid d-none d-md-inline\" src={src} alt={props.userData.user_name} style={{ height: \"100%\" }} \r\n        onClick={\r\n            ()=>console.log(\"soy una psssatata\")\r\n            }\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-md-4 WhiteColor p-5\">\r\n        <h3 className=\"FontDarkMainColor mt-0\">{props.userData.user_name}</h3>\r\n        <hr />\r\n        <p className=\"mb-1\">Edad:</p>\r\n        <h4>{props.userData.age}</h4>\r\n        <p className=\"mb-1\">Telefono:</p>\r\n        <h4>{props.userData.telephone}</h4>\r\n        <p className=\"mb-1\">Ciudad:</p>\r\n        <h4>{props.userData.city}</h4>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <button className=\"btn btn-warning btn-sm mb-0\" onClick={() => { props.goToEditProfile() }}>Editar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\n\r\nconst UPDATE_PROFILE = gql`\r\n   mutation UpdateProfile($token: String!, $name: String!, $city: String!, $telephone: String!, $age: Int!, $photo: String!){\r\n    updateProfileUser(\r\n        token: $token,\r\n        body: {\r\n          user_name: $name,\r\n          age: $age,\r\n          city: $city,\r\n          telephone: $telephone,\r\n          photo: $photo\r\n        }\r\n      ){\r\n        user_name,\r\n        age,\r\n        city,\r\n        telephone,\r\n        photo\r\n      }\r\n  }\r\n`;\r\n\r\nconst UserEditProfile = (props) => {\r\n\r\n    const [UpdateProfile, { data, loading, error }] = useMutation(UPDATE_PROFILE, { errorPolicy: 'all' });\r\n\r\n    const onSubmitValidate = async values => {\r\n        try {\r\n            await UpdateProfile({\r\n                variables: {\r\n                    token: props.token,\r\n                    name: values.user_name,\r\n                    city: values.city,\r\n                    telephone: values.telephone,\r\n                    age: values.age,\r\n                    photo: 'none'\r\n                }\r\n            });\r\n        } catch (e) { }\r\n    };\r\n\r\n    if (data) {\r\n        props.changedProfile(data.updateProfileUser);\r\n    }\r\n\r\n    if (!props.userData || loading) {\r\n        return (\r\n            <div className=\"row justify-content-center text-center\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"spinner-border text-warning\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-md-6\">\r\n                <div className=\"card text-center mt-5\" style={{ paddingLeft: \"9%\", paddingRight: \"9%\" }}>\r\n                    <h1 className=\"mt-3\">Actualizar Perfil</h1>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={props.userData}\r\n                        onFinish={onSubmitValidate}\r\n                        layout={'vertical'}\r\n                        size={'small'}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Nombre\"\r\n                            name=\"user_name\"\r\n                            rules={[{ required: true, message: 'Por favor ingrese un nombre' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Ciudad:\"\r\n                            name=\"city\"\r\n                            rules={[{ required: true, message: 'Por favor ingrese una ciudad válida' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Telefono:\"\r\n                            name=\"telephone\"\r\n                            rules={[{ required: true, message: 'Por favor ingrese un telefono valido' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Edad:\"\r\n                            name=\"age\"\r\n                            rules={[{ required: true, type: 'number', message: 'Por favor ingrese una edad válida', min: 10, max: 120 }]}\r\n                        >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                            >\r\n                                Actualizar\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <div className=\"mb-3 mt-0\">\r\n                        <button className=\"btn btn-link FontBlackLink mb-0\" onClick={() => { props.goToProfile() }}>Volver</button>\r\n                        <button className=\"btn btn-link FontBlackLink ml-2\" onClick={() => { props.goToChangePass() }}>Contraseña</button>\r\n                    </div>\r\n                    {(error) &&\r\n                        <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                            {error.message.substring(19)}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditProfile;","import React, { useState } from 'react';\r\n\r\nimport box from '../../../../shared/images/box.webp';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport UserProfile from '../components/UserProfile';\r\nimport UserEditProfile from '../components/UserEditProfile';\r\nimport ChangePassWord from '../../../../shared/components/ChangePassword';\r\n\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n    }\r\n`;\r\n\r\nconst GET_PROFILE = gql`\r\n  query GetProfile($token: String!){\r\n    profileUser(token: $token){\r\n      user_name\r\n      age\r\n      photo\r\n      telephone\r\n      city\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserProfilePage = () => {\r\n\r\n  const [pageState, setPageState] = useState('profile');\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  const { data: cache } = useQuery(GET_AUTH_DATA);\r\n  const { loading, error, data , refetch} = useQuery(GET_PROFILE, { variables: { token: cache.token } });\r\n\r\n  const goToProfile = () => {\r\n    setPageState('profile');\r\n  }\r\n\r\n  const goToEditProfile = () => {\r\n    setPageState('edit');\r\n  }\r\n\r\n  const goToChangePass = () => {\r\n    setPageState('pass');\r\n  }\r\n\r\n  const changedProfile = (data) => {\r\n    setUserData(data);\r\n    setPageState('profile');\r\n    refetch();\r\n  }\r\n\r\n  if (data && !userData) {\r\n    setUserData(data.profileUser);\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"spinner-border text-warning\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n        {error.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let content\r\n  switch (pageState) {\r\n    case 'profile':\r\n      content = <UserProfile\r\n        goToEditProfile={goToEditProfile}\r\n        userData={userData}\r\n      />\r\n      break;\r\n    case 'edit':\r\n      content = <UserEditProfile\r\n        userData={userData}\r\n        token={cache.token}\r\n        goToProfile={goToProfile}\r\n        changedProfile={changedProfile}\r\n        goToChangePass={goToChangePass}\r\n      />\r\n      break;\r\n    case 'pass':\r\n      content = <ChangePassWord\r\n        token={cache.token}\r\n        goToEditProfile={goToEditProfile}\r\n      />\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className=\"BackgroundImageContainer\">\r\n      <img align=\"middle\" alt=\"react\" src={box} className=\"BackgroundDarkImage\" />\r\n      <div className=\"container ContentOverImage\">\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default UserProfilePage;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nconst RoutineCard = (props) => {\r\n  return (\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card h-100 m-2 border\">\r\n        <iframe title={props.name} width=\"100%\" height=\"215\" src={props.linkPreview} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen=\"allowfullscreen\"></iframe>\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title FontMaincolor\">{props.name}</h3>\r\n          <p className=\"pb-0 mb-1\">Descripción:</p>\r\n          <h6 className=\"card-title\">{props.description}</h6>\r\n          <p className=\"pb-0 mb-1\">Precio:</p>\r\n          <h6 className=\"card-title\">{props.price}</h6>\r\n          <p className=\"pb-0 mb-1\">Calificacion:</p>\r\n          <h6 className=\"card-title\">{props.rating}</h6>\r\n          <p className=\"pb-0 mb-1\">Tipo:</p>\r\n          <h6 className=\"card-title\">{props.type}</h6>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n            >\r\n              Solicitar\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GET_TYPES = gql`\r\n  {\r\n    getAllTypeRoutine{\r\n      id\r\n      name\r\n   }\r\n}\r\n`;\r\n\r\nconst HomeRoutinesList = (props) => {\r\n  const { loading, error, data } = useQuery(GET_TYPES);\r\n\r\n  if (loading || !props.routinesList) {\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 p-0 \">\r\n          <div className=\"spinner-border text-warning\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 p-0 \">\r\n          <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n            {error.message.substring(19)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let RoutinesList = [];\r\n\r\n  if (props.routinesList.length !== 0 && data) {\r\n    props.routinesList.map((routine, index) => {\r\n      data.getAllTypeRoutine.map(type => {\r\n        if (type.id === routine.type.id) {\r\n          RoutinesList.push(\r\n            <RoutineCard\r\n              key={index}\r\n              name={routine.name}\r\n              price={routine.price}\r\n              description={routine.description}\r\n              linkPreview={routine.linkPreview}\r\n              rating={routine.rating}\r\n              type={type.name}\r\n            />\r\n          )\r\n        }\r\n        return null;\r\n      })\r\n      return null;\r\n    });\r\n  } else {\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"alert alert-dark\" role=\"alert\">\r\n            <h2>No hay rutinas con el filtro actual</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <h1>Listado de rutinas</h1>\r\n      </div>\r\n      <div className=\"row row-cols-1 row-cols-md-3\">\r\n        {RoutinesList}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeRoutinesList;","import React from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { Form, Button, Select } from 'antd';\r\n\r\nconst GET_TYPES = gql`\r\n  {\r\n    getAllTypeRoutine{\r\n      id\r\n      name\r\n   }\r\n}\r\n`;\r\n\r\nconst SelectRoutineByIdForm = (props) => {\r\n\r\n    const { data, loading, error } = useQuery(GET_TYPES, { errorPolicy: 'all' });\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 p-0 \">\r\n                        <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n                            {error.message.substring(19)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const types = [];\r\n\r\n    const { Option } = Select;\r\n\r\n    if (data) {\r\n        types.push(<Option key={0} value={0}>Sin filtro</Option >)\r\n        data.getAllTypeRoutine.map((data) => {\r\n            types.push(<Option key={data.id} value={data.id}> {data.name}</Option >)\r\n            return null;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={props.onSubmitChangefilter}\r\n                layout={'vertical'}\r\n                size={'small'}\r\n            >\r\n                <Form.Item\r\n                    label=\"Filtrar por tipo:\"\r\n                    name=\"idType\"\r\n                    rules={[{ required: true, message: 'Seleccione un tipo' }]}>\r\n                    <Select\r\n                        placeholder=\"Tipos\"\r\n                    >\r\n                        {data && types}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ background: \"#ffbc02\", color: \"#231F20\", borderColor: \"#e3a765\" }}\r\n                    >\r\n                        Filtrar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectRoutineByIdForm;","import React, { useState } from 'react';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\r\n\r\nimport HomeRoutines from '../components/HomeRoutinesList';\r\nimport SelectRoutineByIdForm from '../components/SelectRoutineByIdForm';\r\n\r\nconst GET_ROUTINES = gql`\r\nquery GetRoutines($type: Int!){\r\n  getRoutinesByType(idType: $type){\r\n    name,\r\n    description,\r\n    price,\r\n    rating,\r\n    linkPreview,\r\n    type{\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst GET_ALL_ROUTINES = gql`\r\n{\r\n  getAllRoutines{\r\n    name,\r\n    description,\r\n    price,\r\n    rating,\r\n    linkPreview,\r\n    type{\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst UserRoutinesHomePage = () => {\r\n\r\n  const [filter, setFilter] = useState(false);\r\n  const [getRoutines, { loading, error, data }] = useLazyQuery(GET_ROUTINES);\r\n  const { loading: loading2, error: error2, data: data2 } = useQuery(GET_ALL_ROUTINES)\r\n\r\n\r\n  const onSubmitChangefilter = values => {\r\n    if (values.idType === 0) {\r\n      setFilter(false);\r\n    } else {\r\n      setFilter(true);\r\n      getRoutines({ variables: { type: parseInt(values.idType) } })\r\n    }\r\n  };\r\n\r\n  if (loading || loading2) {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center text-center\">\r\n          <div className=\"col-12 p-0 m-5 \">\r\n            <div className=\"spinner-border text-warning m-5\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 p-0 \">\r\n            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n              {error.message.substring(19)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error2) {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 p-0 \">\r\n            <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n              {error.message.substring(19)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let list;\r\n  if (data && filter) {\r\n    list = <HomeRoutines\r\n      routinesList={data.getRoutinesByType}\r\n    />\r\n  } else if (data2) {\r\n    list = <HomeRoutines\r\n      routinesList={data2.getAllRoutines}\r\n    />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 text-center\">\r\n          <div className=\"WhiteColor border p-4 m-4\">\r\n            <button type=\"button\" className=\"btn btn-success\">Mis Rutinas</button>\r\n            <div style={{ paddingLeft: \"11%\", paddingRight: \"11%\" }}>\r\n              <SelectRoutineByIdForm onSubmitChangefilter={onSubmitChangefilter} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {list}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserRoutinesHomePage;","import React from 'react';\r\n\r\nimport '../../../../shared/css/colors.css'\r\nimport '../css/trainerSession.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Row, Col, Layout, Menu } from 'antd';\r\n\r\nimport whitelogo from '../../../../shared/images/whitelogo.webp';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = () => {\r\n\r\n    const history = useHistory();\r\n    const client = useApolloClient();\r\n\r\n    return (\r\n        <>\r\n            <Header className=\"BlackColorMenu header\" >\r\n                <div className=\"LogoBodySoft\">\r\n                    <div onClick={()=>history.push('/')} style={{cursor:\"pointer\"}}>\r\n                        <h1 style={{ color: \"#fafafa\" }}><img alt=\"react\" src={whitelogo} className=\"img-fluid ml-3\" width=\"55px\" style={{ marginRight: \"16px\" }} />BodySoft</h1>\r\n                    </div>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <Menu theme=\"dark\" className=\"BlackColorMenu\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n                            <Menu.Item key=\"1\" onClick={() => { history.push('/') }} >Inicio</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => { history.push('/schedule') }}>Horario</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => { history.push('/trainers') }}>Entrenadores</Menu.Item>\r\n                            <Menu.Item key=\"4\" onClick={() => { history.push('/routines') }}>Rutinas</Menu.Item>\r\n                            <Menu.Item key=\"5\" onClick={() => { history.push('/profile') }} >Perfil</Menu.Item>\r\n                            <Menu.Item key=\"6\" onClick={\r\n                                () => {\r\n                                    client.writeData({\r\n                                        data: {\r\n                                            token: \"\",\r\n                                            type: 0,\r\n                                            profile: false\r\n                                        }\r\n                                    })\r\n                                    localStorage.setItem(\"token\",\"\")\r\n                                    localStorage.setItem(\"type\",0)\r\n                                    localStorage.setItem(\"profile\",\"\")\r\n                                    history.push('/')\r\n                                }\r\n                            } >Cerrar sesion</Menu.Item>\r\n                        </Menu>\r\n                    </Col>\r\n                </Row>\r\n            </Header>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { Typography, Row, Col, List, Popover, Button, Card, Input } from 'antd';\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../css/cards.css'\r\n\r\nconst { Search } = Input;\r\n\r\nconst { Title, } = Typography;\r\n\r\nconst GET_SESSIONS_USER = gql`\r\nquery getSessionsUser($token:String!){\r\n  getCurrentbyId(Token: $token){\r\n    id_schedule\r\n    idCoach\r\n    daySession\r\n    iniTime\r\n    endTime\r\n    status {\r\n      id\r\n      nameStatus\r\n    }\r\n    idUser\r\n  }\r\n}\r\n`\r\n\r\nconst GET_TOKEN = gql`\r\nquery getToken{\r\n  token @client\r\n  type @client\r\n}\r\n`\r\n\r\nconst CANCEL_SESSION_USER = gql`\r\nmutation cancelSessionUser($token:String!,$schedule:Int!){\r\n  CancelADate(ChangeStatus: {\r\n    token:$token\r\n    schedule:$schedule\r\n  })\r\n}\r\n`\r\n\r\nconst CHATS_USER = gql`\r\nquery getChatsUSer($token:String!,$trainerId:ID!){\r\n  chatUserTrainer(\r\n    token:$token\r\n    trainerId:$trainerId\r\n  ) {\r\n    _id\r\n    date\r\n    id_user\r\n    id_trainer\r\n    messages {\r\n      _id\r\n      date\r\n      id_author\r\n      content\r\n    }\r\n  }\r\n}\r\n`\r\nconst SEND_MESSAGE = gql`\r\nmutation sendMessage($token:String!,$chatId:ID!,$content:String!){\r\n  createMessageUserTrainer(\r\n  token:$token,\r\n  chatId:$chatId,\r\n  message:{\r\n    content:$content\r\n  }) {\r\n    _id\r\n    date\r\n    id_author\r\n    content\r\n  }\r\n}\r\n`\r\n\r\nconst UserSessionHome = () => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { data: dataSesssion, error: errorSession, loading: loadingSesssion } = useQuery(GET_SESSIONS_USER, { variables: { token } });\r\n\r\n  const [cardSession, setCardSession] = useState(null);\r\n\r\n  if (errorSession) {\r\n    return <div>error</div>\r\n  }\r\n\r\n  if (loadingSesssion) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  const dayHours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24']\r\n  return (\r\n    <>\r\n      {cardSession}\r\n      <Row><br /></Row>\r\n      <Row><br /></Row>\r\n      <Row justify=\"center\" >\r\n        <Col xs={23}>\r\n          <Row justify=\"center\"\r\n            style={{ //height: \"500px\", overflow: \"auto\", \r\n              border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n            }}\r\n          >\r\n            <Col xs={3}>\r\n              <Row justify=\"center\"  ><Title level={3}>Horario</Title></Row>\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={dayHours}\r\n                renderItem={item => (\r\n                  <List.Item\r\n                    style={{ border: \"1px solid #e8e8e8\" }}\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={\r\n                        <Row style={{ background: \"white\" }} justify=\"center\" >\r\n                          {item}\r\n                        </Row>\r\n                      }\r\n                      description=\"\"\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <DaysCalendar sessions={dataSesssion.getCurrentbyId} onClickHour={(e) => { setCardSession(e) }} />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSessionHome;\r\n\r\n\r\nconst GET_USER_SESSIONS_COACH = gql`\r\nquery getUserSessionsCoach($token:String!, $coach:Int!){ \r\n  getAllbyCoachAvaibles(User:$token, coach: $coach){\r\n  id_schedule\r\n  idCoach\r\n  daySession\r\n  iniTime\r\n  endTime\r\n  status {\r\n    id\r\n    nameStatus\r\n  }\r\n  idUser\r\n  }\r\n}\r\n`\r\n\r\nconst dateFormatYYYMMDD = (today) => {\r\n  let month = '' + (today.getMonth() + 1);\r\n  let day = '' + today.getDate();\r\n  const year = today.getFullYear();\r\n\r\n  if (month.length < 2)\r\n    month = '0' + month;\r\n  if (day.length < 2)\r\n    day = '0' + day;\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\nconst DaysCalendar = ({ sessions, onClickHour }) => {\r\n\r\n  let day1 = new Date();\r\n  let day2 = new Date();\r\n  let day3 = new Date();\r\n  let day4 = new Date();\r\n  let day5 = new Date();\r\n\r\n  day2.setDate(day2.getDate() + 1)\r\n  day3.setDate(day3.getDate() + 2)\r\n  day4.setDate(day4.getDate() + 3)\r\n  day5.setDate(day5.getDate() + 4)\r\n\r\n\r\n  const daysName = [\"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\"];\r\n\r\n\r\n  const day1Format = dateFormatYYYMMDD(day1)\r\n  const day2Format = dateFormatYYYMMDD(day2)\r\n  const day3Format = dateFormatYYYMMDD(day3)\r\n  const day4Format = dateFormatYYYMMDD(day4)\r\n  const day5Format = dateFormatYYYMMDD(day5)\r\n\r\n\r\n  const dayHours = [\r\n    {\r\n      iniTime: \"01:00:00\",\r\n      endTime: \"02:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"02:00:00\",\r\n      endTime: \"03:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"03:00:00\",\r\n      endTime: \"04:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"04:00:00\",\r\n      endTime: \"05:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"05:00:00\",\r\n      endTime: \"06:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"06:00:00\",\r\n      endTime: \"07:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"07:00:00\",\r\n      endTime: \"08:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"08:00:00\",\r\n      endTime: \"09:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"09:00:00\",\r\n      endTime: \"10:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"10:00:00\",\r\n      endTime: \"11:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"11:00:00\",\r\n      endTime: \"12:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"12:00:00\",\r\n      endTime: \"13:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"13:00:00\",\r\n      endTime: \"14:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"14:00:00\",\r\n      endTime: \"15:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"15:00:00\",\r\n      endTime: \"16:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"16:00:00\",\r\n      endTime: \"17:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"17:00:00\",\r\n      endTime: \"18:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"18:00:00\",\r\n      endTime: \"19:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"19:00:00\",\r\n      endTime: \"20:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"20:00:00\",\r\n      endTime: \"21:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"21:00:00\",\r\n      endTime: \"22:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"22:00:00\",\r\n      endTime: \"23:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"23:00:00\",\r\n      endTime: \"24:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"24:00:00\",\r\n      endTime: \"01:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n  ]\r\n\r\n  const sessionsDaysData = {\r\n    day1: {\r\n      name: daysName[day1.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day2: {\r\n      name: daysName[day2.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day3: {\r\n      name: daysName[day3.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day4: {\r\n      name: daysName[day4.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day5: {\r\n      name: daysName[day5.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    }\r\n  }\r\n\r\n  sessionsDaysData.day1.hours.forEach(\r\n    hour => {\r\n\r\n      hour.daySession = day1Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day2.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day2Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day3.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day3Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day4.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day4Format.slice();\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day5.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day5Format.slice();\r\n    }\r\n  )\r\n\r\n\r\n  sessions.forEach(\r\n    session => {\r\n      switch (session.daySession) {\r\n        case day1Format:\r\n          sessionsDaysData.day1.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day2Format:\r\n          sessionsDaysData.day2.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day3Format:\r\n          sessionsDaysData.day3.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day4Format:\r\n          sessionsDaysData.day4.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day5Format:\r\n          sessionsDaysData.day5.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  )\r\n\r\n  console.log('DAYSCOMPONENT', sessionsDaysData)\r\n\r\n  return (\r\n    <>\r\n      <DayComponent name={sessionsDaysData.day1.name} dayNumber={1} hours={sessionsDaysData.day1.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day2.name} dayNumber={2} hours={sessionsDaysData.day2.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day3.name} dayNumber={3} hours={sessionsDaysData.day3.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day4.name} dayNumber={4} hours={sessionsDaysData.day4.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day5.name} dayNumber={5} hours={sessionsDaysData.day5.hours} onClickHour={onClickHour} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst DayComponent = ({ dayNumber, name, hours, onClickHour }) => {\r\n\r\n  return (\r\n    <Col xs={4} justify=\"center\">\r\n      <Row justify=\"center\"><Title level={3}>{name}</Title></Row>\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={hours}\r\n        renderItem={\r\n          item => {\r\n            let { id, nameStatus } = item.status;\r\n            //console.log(\"ITEM\", item.status)\r\n            let content;\r\n            let color;\r\n            let card;\r\n            let cursor;\r\n            if (dayNumber === 1) {\r\n              switch (id) {\r\n                case 4:\r\n                  color = \"#8c8c8c\"\r\n                  content = \"Esta sesion ya termino\"\r\n                  break;\r\n                default:\r\n                  nameStatus = null;\r\n                  color = \"white\";\r\n                  break;\r\n              }\r\n              return (\r\n                <ListItem cursor={cursor} color={color} onClick={\r\n                  () => {\r\n                    onClickHour(card)\r\n                  }}\r\n                  nameStatus={nameStatus}\r\n                />\r\n              )\r\n            }\r\n\r\n            switch (id) {\r\n              case 1:\r\n                color = \"#7cb305\"\r\n                content = \"Puedes tener una sesion en este horario\"\r\n                card = <CardAvailable onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                break;\r\n              case 2:\r\n                card = <CardTaken onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                color = \"#096dd9\"\r\n                content = \"Has seleccionado este horario.\"\r\n                cursor = \"pointer\";\r\n                break;\r\n              case 4:\r\n                color = \"#8c8c8c\"\r\n                content = \"Esta sesion ya termino\"\r\n                break;\r\n              default:\r\n                return (\r\n                  <ListItem cursor={cursor} color={color} onClick={\r\n                    () => {\r\n                      onClickHour(card)\r\n                    }}\r\n                    nameStatus={null}\r\n                  />\r\n                )\r\n            }\r\n\r\n            return (\r\n              <Popover placement=\"topLeft\" title={nameStatus} content={content}>\r\n                <div>\r\n                  <ListItem cursor={cursor} color={color} onClick={\r\n                    () => {\r\n                      onClickHour(card)\r\n                    }}\r\n                    nameStatus={nameStatus}\r\n                  />\r\n                </div>\r\n              </Popover>\r\n            )\r\n          }}\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst ListItem = ({ color, cursor, onClick, nameStatus }) => {\r\n  return (\r\n    <div>\r\n      <List.Item\r\n        style={{ border: \"1px solid #e8e8e8\", backgroundColor: color, cursor: cursor }}\r\n        type=\"primary\"\r\n        onClick={() => onClick()}\r\n      >\r\n        <List.Item.Meta\r\n          title={\r\n            <div>\r\n              <Row style={{ color: \"white\" }} justify=\"center\" >\r\n                {nameStatus}\r\n                <br />\r\n              </Row>\r\n            </div>\r\n          }\r\n          description={\r\n            <Row justify=\"center\" style={{ color: \"black\", fontWeight: \"500\" }}>\r\n\r\n            </Row>\r\n          }\r\n        />\r\n      </List.Item>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst CardAvailable = ({ name, onClickExit, hourSession }) => {\r\n\r\n\r\n  const { iniTime } = hourSession;\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincard\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<><h3 style={{ marginBottom: \"5px\" }}>Tomar esta sesión</h3></>} bordered={false}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#ffbc02\", borderColor: \"#e3a765\", width: \"100%\", color: \"#231F20\" }}\r\n                  onClick={() => {\r\n                    onClickExit();\r\n                  }}\r\n                >Crear</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardTaken = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { iniTime } = hourSession;\r\n\r\n  //console.log(\"hourSession\", hourSession)\r\n\r\n  const variables = {\r\n    token: token,\r\n    schedule: hourSession.id_schedule\r\n  }\r\n\r\n  const [cancelSesssion] = useMutation(\r\n    CANCEL_SESSION_USER,\r\n    {\r\n      update(cache) {\r\n        const { getCurrentbyId } = cache.readQuery({ query: GET_SESSIONS_USER, variables: { token } })\r\n        cache.writeQuery(\r\n          {\r\n            query: GET_SESSIONS_USER, variables: { token },\r\n            data: { getCurrentbyId: getCurrentbyId.filter(session => session.id_schedule !== hourSession.id_schedule) }\r\n          }\r\n        )\r\n      },\r\n      refetchQueries: [{ query: GET_USER_SESSIONS_COACH, variables: { token, coach: hourSession.idCoach } }]\r\n    }\r\n  )\r\n\r\n\r\n\r\n  //mensajes\r\n  const [menssage, setMenssage] = useState(\"\");\r\n\r\n  //const [messages, setMessages] = useState([]);\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  console.log(\"hourSession.idCoach\", hourSession.idCoach);\r\n\r\n  const { loading, error, data } = useQuery(CHATS_USER, {\r\n    variables: { token, trainerId: hourSession.idCoach },\r\n    skip:false,\r\n    pollInterval: 1000,\r\n  });\r\n\r\n  console.log(\"DATA\", data);\r\n\r\n  const messages = (data && data.chatUserTrainer && data.chatUserTrainer.messages) || [];\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current && messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n\r\n  //send message\r\n\r\n  const [sendMessage] = useMutation(\r\n    SEND_MESSAGE\r\n  )\r\n\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger m-0\" role=\"alert\">\r\n      {error.message.substring(19)}\r\n    </div>\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"spinner-border text-warning\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincardChat\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<h2>Eliminar sesión </h2>} bordered={false}>\r\n          <Row style={{\r\n            border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n          }} >\r\n            <Col xs={24} style={{ height: \"300px\" }}>\r\n              <Row style={{ overflow: \"auto\", height: \"300px\", }}>\r\n                <Col xs={24} style={{ height: \"300px\" }}></Col>\r\n                {messages.map(message => {\r\n                  if (data.chatUserTrainer.id_user === message.id_author) {\r\n                    return (\r\n                      <Col key={message._id} xs={24}>\r\n                        <Row key={message._id} justify=\"end\">\r\n                          <p key={message._id} style={{\r\n                            border: \"1px solid #d3e7c2\", borderRadius: \"4px\", backgroundColor: \"#d3e7c2\", paddingLeft: \"10px\", paddingRight: \"10px\",\r\n                            maxWidth: \"80%\", wordBreak: \"break-all\",\r\n                          }}>{message.content}</p>\r\n                        </Row>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  return (\r\n                      <Col key={message._id} xs={24}>\r\n                        <Row key={message._id}>\r\n                          <p key={message._id} style={{\r\n                            border: \"1px solid #e8e8e8\", borderRadius: \"4px\", backgroundColor: \"#f0f0f0\", paddingLeft: \"10px\", paddingRight: \"10px\",\r\n                            maxWidth: \"80%\", wordBreak: \"break-all\",\r\n                          }}>{message.content}</p>\r\n                        </Row>\r\n                      </Col>\r\n                    )\r\n                }\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </Row>\r\n            </Col>\r\n            <Search\r\n              placeholder=\"Escribe el mensaje que deseas enviar\"\r\n              enterButton={<CheckOutlined />}\r\n              size=\"large\"\r\n              value={menssage}\r\n              onChange={e => {\r\n                //console.log(\"VALUE\", e.target.value);\r\n                setMenssage(e.target.value);\r\n              }}\r\n              onSearch={value => {\r\n                //console.log(value);\r\n                setMenssage(\"\")\r\n                if (value) {\r\n                  sendMessage({\r\n                    variables: {\r\n                      chatId: data.chatUserTrainer._id,\r\n                      token,\r\n                      content: menssage\r\n                    }\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#cf1322\", borderColor: \"#820014\", width: \"100%\", color: \"white\" }}\r\n\r\n                  onClick={() => {\r\n                    cancelSesssion({ variables })\r\n                    onClickExit();\r\n                  }}\r\n                >Eliminar</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { Typography, Row, Col, List, Popover, Button, Card, Avatar, Space, Divider } from 'antd';\r\n\r\nimport { MessageOutlined, LikeOutlined, StarOutlined, PhoneOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst { Title, } = Typography;\r\n\r\n\r\nconst GET_TOKEN = gql`\r\nquery getToken{\r\n  token @client\r\n  type @client\r\n}\r\n`\r\n\r\nconst GET_USER_SESSIONS_COACH = gql`\r\nquery getUserSessionsCoach($token:String!, $coach:Int!){ \r\n  getAllbyCoachAvaibles(User:$token, coach: $coach){\r\n  id_schedule\r\n  idCoach\r\n  daySession\r\n  iniTime\r\n  endTime\r\n  status {\r\n    id\r\n    nameStatus\r\n  }\r\n  idUser\r\n  }\r\n}\r\n`\r\n\r\nconst GET_SESSIONS_USER = gql`\r\nquery getSessionsUser($token:String!){\r\n  getCurrentbyId(Token: $token){\r\n    id_schedule\r\n    idCoach\r\n    daySession\r\n    iniTime\r\n    endTime\r\n    status {\r\n      id\r\n      nameStatus\r\n    }\r\n    idUser\r\n  }\r\n}\r\n`\r\n\r\nconst CREATE_USER_SESSION = gql`\r\nmutation createUserSession($token:String!,$schedule:Int!){\r\n  setAdates(ChangeStatus:{ token: $token,\r\n    schedule:$schedule\r\n  })\r\n}\r\n`\r\n\r\nconst GET_PROFILE_TRAINER = gql`\r\nquery getProfileTrainer($idTrainer:ID!){\r\n  profileTrainerById(idTrainer: $idTrainer){\r\n    trainer_id\r\n    trainer_name\r\n    age\r\n    photo\r\n    telephone\r\n    city\r\n    sum_ratings\r\n    num_ratings\r\n    description\r\n    work_experience\r\n    resources\r\n    specialities\r\n  }\r\n}\r\n`\r\n\r\nconst CREATE_CHAT_USER_TRAINER = gql`\r\nmutation createChatUserTrainer($token:String!,$trainerId:ID!){\r\n  createChatUserTrainer(\r\n    token:$token,trainerId:$trainerId\r\n    ) {\r\n    _id\r\n    date\r\n    id_user\r\n    id_trainer\r\n  }\r\n}\r\n`\r\n\r\nconst UserSessionTrainer = () => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { id } = useParams();\r\n\r\n  const history = useHistory();\r\n\r\n  console.log(\"token\", token)\r\n\r\n  const { data, loading, error } = useQuery(GET_USER_SESSIONS_COACH, { variables: { token, coach: parseInt(id) } })\r\n\r\n  const { data: dataProfile, loading: loadingProfile, error: errorProfile } = useQuery(GET_PROFILE_TRAINER, { variables: { idTrainer: id } })\r\n\r\n  const dayHours = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24']\r\n\r\n  const [cardSession, setCardSession] = useState(null);\r\n\r\n  if (loading || loadingProfile) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  if (error || errorProfile) {\r\n    console.log(\"error\", error)\r\n    console.log(\"errorProfile\", errorProfile)\r\n    return <div>error</div>\r\n  }\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  const profile = dataProfile.profileTrainerById;\r\n\r\n  profile.photo = 'https://www.frankzane.com/wp-content/uploads/Frank-Home-04-450x450.jpg';\r\n\r\n  console.log(\"profileTrainerById\", dataProfile.profileTrainerById);\r\n\r\n  const trainers = [profile];\r\n\r\n  return (\r\n    <>\r\n      {cardSession}\r\n      <Row><br /></Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <h1 className=\"TitleFontTypeRoboto mb-0\">Crea una sesión con tu entrenador</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row><br /></Row>\r\n\r\n      <Row justify=\"center\">\r\n        <Col xs={12}>\r\n          <Row justify=\"center\"\r\n            style={{ //height: \"500px\", overflow: \"auto\", \r\n              border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n            }}\r\n          >\r\n            <Col >\r\n              <Row><Title level={3}>Perfil del entrenador</Title><Divider style={{ margin: \"0px\" }} /></Row>\r\n\r\n              <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n\r\n                dataSource={trainers}\r\n\r\n                renderItem={item => (\r\n                  <List.Item\r\n                    key={item.trainer_id}\r\n                    actions={[\r\n                      <IconText icon={StarOutlined} text={\r\n                        item.num_ratings === 0 ? \"Sin calificar\" : (10 * item.sum_ratings / item.num_ratings) + \"\"\r\n                      } key=\"list-vertical-star-o\" />,\r\n                      <IconText icon={PhoneOutlined} text={item.telephone} key=\"list-vertical-star-o\" />,\r\n                      <IconText icon={HomeOutlined} text={item.city} key=\"list-vertical-star-o\" />,\r\n                    ]}\r\n\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={<Avatar style={{ width: \"100px\", height: \"100px\" }} src={item.photo} />}\r\n                      title={<p style={{ color: \"#434343\" }}>{item.trainer_name}</p>}\r\n                      description={\r\n                        <>\r\n                          <div>{\r\n                            item.specialities.map(\r\n                              speciality => <React.Fragment key={speciality}>{speciality} </React.Fragment>\r\n                            )\r\n                          }</div>\r\n                        </>\r\n                      }\r\n                    />\r\n                    {item.description}\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row><br /></Row>\r\n      <Row><br /></Row>\r\n\r\n      <Row justify=\"center\">\r\n\r\n        <Col xs={23}>\r\n          <Row justify=\"center\"\r\n            style={{ //height: \"500px\", overflow: \"auto\", \r\n              border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n            }}\r\n          >\r\n\r\n            <Col xs={24}>\r\n              <Row justify=\"center\">\r\n                <Row><Title level={3}>Perfil del entrenador</Title></Row>\r\n                <Divider/>\r\n              </Row>\r\n            </Col>\r\n\r\n\r\n            <Col xs={3}>\r\n              <Row justify=\"center\"  ><Title level={3}>Horario</Title></Row>\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={dayHours}\r\n                renderItem={item => (\r\n                  <List.Item\r\n                    style={{ border: \"1px solid #e8e8e8\" }}\r\n                  >\r\n                    <List.Item.Meta\r\n                      title={\r\n                        <Row style={{ background: \"white\" }} justify=\"center\" >\r\n                          {item}\r\n                        </Row>\r\n                      }\r\n                      description=\"\"\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n            <DaysCalendar sessions={data.getAllbyCoachAvaibles} onClickHour={(e) => { setCardSession(e) }} />\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSessionTrainer;\r\n\r\n\r\n\r\nconst dateFormatYYYMMDD = (today) => {\r\n  let month = '' + (today.getMonth() + 1);\r\n  let day = '' + today.getDate();\r\n  const year = today.getFullYear();\r\n\r\n  if (month.length < 2)\r\n    month = '0' + month;\r\n  if (day.length < 2)\r\n    day = '0' + day;\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\nconst DaysCalendar = ({ sessions, onClickHour }) => {\r\n\r\n  let day1 = new Date();\r\n  let day2 = new Date();\r\n  let day3 = new Date();\r\n  let day4 = new Date();\r\n  let day5 = new Date();\r\n\r\n  day2.setDate(day2.getDate() + 1)\r\n  day3.setDate(day3.getDate() + 2)\r\n  day4.setDate(day4.getDate() + 3)\r\n  day5.setDate(day5.getDate() + 4)\r\n\r\n\r\n  const daysName = [\"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\"];\r\n\r\n\r\n  const day1Format = dateFormatYYYMMDD(day1)\r\n  const day2Format = dateFormatYYYMMDD(day2)\r\n  const day3Format = dateFormatYYYMMDD(day3)\r\n  const day4Format = dateFormatYYYMMDD(day4)\r\n  const day5Format = dateFormatYYYMMDD(day5)\r\n\r\n\r\n  const dayHours = [\r\n    {\r\n      iniTime: \"01:00:00\",\r\n      endTime: \"02:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"02:00:00\",\r\n      endTime: \"03:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"03:00:00\",\r\n      endTime: \"04:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"04:00:00\",\r\n      endTime: \"05:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"05:00:00\",\r\n      endTime: \"06:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"06:00:00\",\r\n      endTime: \"07:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"07:00:00\",\r\n      endTime: \"08:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"08:00:00\",\r\n      endTime: \"09:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"09:00:00\",\r\n      endTime: \"10:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"10:00:00\",\r\n      endTime: \"11:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"11:00:00\",\r\n      endTime: \"12:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"12:00:00\",\r\n      endTime: \"13:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"13:00:00\",\r\n      endTime: \"14:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"14:00:00\",\r\n      endTime: \"15:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"15:00:00\",\r\n      endTime: \"16:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"16:00:00\",\r\n      endTime: \"17:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"17:00:00\",\r\n      endTime: \"18:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"18:00:00\",\r\n      endTime: \"19:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"19:00:00\",\r\n      endTime: \"20:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"20:00:00\",\r\n      endTime: \"21:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"21:00:00\",\r\n      endTime: \"22:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"22:00:00\",\r\n      endTime: \"23:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"23:00:00\",\r\n      endTime: \"24:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n    {\r\n      iniTime: \"24:00:00\",\r\n      endTime: \"01:00:00\",\r\n      status: { id: 0, nameStatus: \"Libre\" },\r\n    },\r\n  ]\r\n\r\n  const sessionsDaysData = {\r\n    day1: {\r\n      name: daysName[day1.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day2: {\r\n      name: daysName[day2.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day3: {\r\n      name: daysName[day3.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day4: {\r\n      name: daysName[day4.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    },\r\n    day5: {\r\n      name: daysName[day5.getDay()],\r\n      hours: dayHours.map(\r\n        h => { return { ...h } }\r\n      )\r\n    }\r\n  }\r\n\r\n  sessionsDaysData.day1.hours.forEach(\r\n    hour => {\r\n\r\n      hour.daySession = day1Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day2.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day2Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day3.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day3Format;\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day4.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day4Format.slice();\r\n    }\r\n  )\r\n\r\n  sessionsDaysData.day5.hours.forEach(\r\n    hour => {\r\n      hour.daySession = day5Format.slice();\r\n    }\r\n  )\r\n\r\n\r\n  sessions.forEach(\r\n    session => {\r\n      switch (session.daySession) {\r\n        case day1Format:\r\n          sessionsDaysData.day1.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day2Format:\r\n          sessionsDaysData.day2.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day3Format:\r\n          sessionsDaysData.day3.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day4Format:\r\n          sessionsDaysData.day4.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        case day5Format:\r\n          sessionsDaysData.day5.hours[parseInt(session.iniTime) - 1] = session;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  )\r\n\r\n  console.log('DAYSCOMPONENT', sessionsDaysData)\r\n\r\n  return (\r\n    <>\r\n      <DayComponent name={sessionsDaysData.day1.name} dayNumber={1} hours={sessionsDaysData.day1.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day2.name} dayNumber={2} hours={sessionsDaysData.day2.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day3.name} dayNumber={3} hours={sessionsDaysData.day3.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day4.name} dayNumber={4} hours={sessionsDaysData.day4.hours} onClickHour={onClickHour} />\r\n      <DayComponent name={sessionsDaysData.day5.name} dayNumber={5} hours={sessionsDaysData.day5.hours} onClickHour={onClickHour} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst DayComponent = ({ dayNumber, name, hours, onClickHour }) => {\r\n\r\n  return (\r\n    <Col xs={4} justify=\"center\">\r\n      <Row justify=\"center\"><Title level={3}>{name}</Title></Row>\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={hours}\r\n        renderItem={\r\n          item => {\r\n            let { id, nameStatus } = item.status;\r\n            //console.log(\"ITEM\", item.status)\r\n            let content;\r\n            let color;\r\n            let card;\r\n            let cursor;\r\n            if (dayNumber === 1) {\r\n              switch (id) {\r\n                case 4:\r\n                  color = \"#8c8c8c\"\r\n                  content = \"Esta sesion ya termino\"\r\n                  break;\r\n                default:\r\n                  nameStatus = null;\r\n                  color = \"white\";\r\n                  break;\r\n              }\r\n              return (\r\n                <ListItem cursor={cursor} color={color} onClick={\r\n                  () => {\r\n                    onClickHour(card)\r\n                  }}\r\n                  nameStatus={nameStatus}\r\n                />\r\n              )\r\n            }\r\n\r\n            switch (id) {\r\n              case 1:\r\n                color = \"#7cb305\"\r\n                content = \"Puedes tener una sesion en este horario\"\r\n                cursor = \"pointer\";\r\n                card = <CardAvailable onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                break;\r\n              case 2:\r\n                card = <CardTaken onClickExit={() => onClickHour(null)} name={name} hourSession={item} />\r\n                color = \"#096dd9\"\r\n                content = \"Este horario ha sido seleccionado por un usuario\"\r\n                break;\r\n              case 4:\r\n                color = \"#8c8c8c\"\r\n                content = \"Esta sesion ya termino\"\r\n                break;\r\n              default:\r\n                return (\r\n                  <ListItem cursor={cursor} color={color} onClick={\r\n                    () => {\r\n                      onClickHour(card)\r\n                    }}\r\n                    nameStatus={null}\r\n                  />\r\n                )\r\n            }\r\n\r\n            return (\r\n              <Popover placement=\"topLeft\" title={nameStatus} content={content}>\r\n                <div>\r\n                  <ListItem cursor={cursor} color={color} onClick={\r\n                    () => {\r\n                      onClickHour(card)\r\n                    }}\r\n                    nameStatus={nameStatus}\r\n                  />\r\n                </div>\r\n              </Popover>\r\n            )\r\n          }}\r\n      />\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst ListItem = ({ color, cursor, onClick, nameStatus }) => {\r\n  return (\r\n    <div>\r\n      <List.Item\r\n        style={{ border: \"1px solid #e8e8e8\", backgroundColor: color, cursor: cursor }}\r\n        type=\"primary\"\r\n        onClick={() => onClick()}\r\n      >\r\n        <List.Item.Meta\r\n          title={\r\n            <div>\r\n              <Row style={{ color: \"white\" }} justify=\"center\" >\r\n                {nameStatus}\r\n                <br />\r\n              </Row>\r\n            </div>\r\n          }\r\n          description={\r\n            <Row justify=\"center\" style={{ color: \"black\", fontWeight: \"500\" }}>\r\n\r\n            </Row>\r\n          }\r\n        />\r\n      </List.Item>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst CardAvailable = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { data: dataSesssion, error: errorSession, loading: loadingSesssion } = useQuery(GET_SESSIONS_USER, { variables: { token } });\r\n\r\n  const { iniTime, daySession, endTime } = hourSession;\r\n\r\n  const { id } = useParams();\r\n\r\n  const variables = {\r\n    token: token,\r\n    schedule: hourSession.id_schedule\r\n  }\r\n\r\n  const [registerSchedules] = useMutation(\r\n    CREATE_USER_SESSION,\r\n    {\r\n      update(cache) {\r\n        const { getAllbyCoachAvaibles } = cache.readQuery({ query: GET_USER_SESSIONS_COACH, variables: { token: token, coach: parseInt(id) } });\r\n        cache.writeQuery({\r\n          query: GET_USER_SESSIONS_COACH, variables: { token: token, coach: parseInt(id) },\r\n          data: { getAllbyCoachAvaibles: getAllbyCoachAvaibles.filter(session => session.id_schedule !== hourSession.id_schedule) },\r\n        })\r\n      }\r\n      , refetchQueries: [{ query: GET_SESSIONS_USER, variables: { token } }]\r\n    },\r\n  )\r\n\r\n  const [createCahtUserTrainer] = useMutation(\r\n    CREATE_CHAT_USER_TRAINER\r\n  )\r\n\r\n  if (errorSession) {\r\n    return <div>error</div>\r\n  }\r\n\r\n  if (loadingSesssion) {\r\n    return <div>loading</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincard\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<><h3 style={{ marginBottom: \"5px\" }}>Tomar esta sesión</h3></>} bordered={false}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#ffbc02\", borderColor: \"#e3a765\", width: \"100%\", color: \"#231F20\" }}\r\n                  onClick={() => {\r\n                    createCahtUserTrainer({variables:{token,trainerId:hourSession.idCoach}});\r\n                    onClickExit(registerSchedules({ variables }));\r\n                  }}\r\n                >Crear</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CardTaken = ({ name, onClickExit, hourSession }) => {\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { iniTime } = hourSession;\r\n\r\n  console.log(\"id_schedule\", hourSession.id_schedule)\r\n\r\n  const variables = {\r\n    token: token,\r\n    schedule: hourSession.id_schedule\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"maincard\" style={{ backgroundColor: \"white\", borderRadius: \"4px\" }}>\r\n        <Card title={<h2>Eliminar sesión </h2>} bordered={false}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h4>Dia:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{name}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col xs={12}>\r\n              <h4>Hora:</h4>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row justify=\"center\">\r\n                <h4 style={{ fontWeight: \"lighter\" }}>{parseInt(iniTime)}</h4>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"center\">\r\n            <Col xs={24}>\r\n              <Row><br /></Row>\r\n              <Row >\r\n                <Button\r\n                  style={{ backgroundColor: \"#cf1322\", borderColor: \"#820014\", width: \"100%\", color: \"white\" }}\r\n                  onClick={() => {\r\n                    onClickExit();\r\n                  }}\r\n                >Eliminar</Button>\r\n              </Row>\r\n              <Row><br /></Row>\r\n              <Row>\r\n                <Button style={{ width: \"100%\", color: \"#231F20\", borderColor: \"#8c8c8c\" }} onClick={() => onClickExit()}>Cancelar</Button>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n      <div className=\"backdropCard\" onClick={() => { onClickExit() }} />\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Typography, Row, Col, List, Avatar, Space, Divider } from 'antd';\r\n\r\nimport { StarOutlined, PhoneOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst { Title, } = Typography;\r\n\r\nconst GET_TRAINERS = gql`\r\n{\r\n  profileTrainers{\r\n    trainer_id\r\n    trainer_name\r\n    age\r\n    photo\r\n    telephone\r\n    city\r\n    sum_ratings\r\n    num_ratings\r\n    description\r\n    work_experience\r\n    resources\r\n    specialities\r\n  }\r\n}\r\n`\r\nconst GET_SESSIONS_USER = gql`\r\nquery getSessionsUser($token:String!){\r\n  getCurrentbyId(Token: $token){\r\n    id_schedule\r\n    idCoach\r\n    daySession\r\n    iniTime\r\n    endTime\r\n    status {\r\n      id\r\n      nameStatus\r\n    }\r\n    idUser\r\n  }\r\n}\r\n`\r\n\r\nconst GET_TOKEN = gql`\r\nquery getToken{\r\n  token @client\r\n  type @client\r\n}\r\n`\r\n\r\n\r\nconst UserTrainersHome = () => {\r\n\r\n  const { data, error, loading } = useQuery(GET_TRAINERS);\r\n\r\n  const token = useQuery(GET_TOKEN).data.token;\r\n\r\n  const { error: errorSession, loading: loadingSesssion} = useQuery(GET_SESSIONS_USER,{variables:{token}});\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [cardSession] = useState(null);\r\n\r\n  if (error || errorSession) {\r\n    return <div>error</div>\r\n  }\r\n\r\n  if (loading || loadingSesssion) {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  const trainers = data.profileTrainers.map(\r\n    trainer => {\r\n      trainer.photo = 'https://www.frankzane.com/wp-content/uploads/Frank-Home-04-450x450.jpg'\r\n      return trainer;\r\n    }\r\n  )\r\n\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  return (\r\n    <>\r\n    {cardSession}\r\n    <Row><br /></Row>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <h1 className=\"TitleFontTypeRoboto mb-0\">Escoge tu entrenador favorito</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row><br /></Row>\r\n      <Row justify=\"center\">\r\n        <Col xs={12}>\r\n          <Row justify=\"center\"\r\n            style={{ //height: \"500px\", overflow: \"auto\", \r\n              border: \"1px solid #e8e8e8\", borderRadius: \"4px\", padding: \"8px 24px\", backgroundColor: \"white\"\r\n            }}\r\n          >\r\n            <Col >\r\n              <Row><Title level={3}>Entrenadores</Title><Divider style={{ margin: \"0px\" }} /></Row>\r\n\r\n              <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                  onChange: page => {\r\n                    console.log(page);\r\n                  },\r\n                  pageSize: 5,\r\n                }}\r\n\r\n                dataSource={trainers}\r\n\r\n                renderItem={item => (\r\n                  <List.Item\r\n                    key={item.trainer_id}\r\n                    actions={[\r\n                      <IconText icon={StarOutlined} text={\r\n                        item.num_ratings === 0 ? \"Sin calificar\" : (10 * item.sum_ratings / item.num_ratings) + \"\"\r\n                      } key=\"list-vertical-star-o\" />,\r\n                      <IconText icon={PhoneOutlined} text={item.telephone} key=\"list-vertical-star-o\" />,\r\n                      <IconText icon={HomeOutlined} text={item.city} key=\"list-vertical-star-o\" />,\r\n                    ]}\r\n\r\n                    onClick={() => history.push(location.pathname+'/' + item.trainer_id)}\r\n\r\n                    style={{ cursor: \"pointer\" }}\r\n\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={<Avatar style={{ width: \"100px\", height: \"100px\" }} src={item.photo} />}\r\n                      title={<p style={{ color: \"#434343\" }}>{item.trainer_name}</p>}\r\n                      description={\r\n                        <>\r\n                          <div>{\r\n                            item.specialities.map(\r\n                              speciality => <React.Fragment key={speciality}>{speciality} </React.Fragment>\r\n                            )\r\n                          }</div>\r\n                        </>\r\n                      }\r\n                    />\r\n                    {item.description}\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Col>\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default UserTrainersHome\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\n\r\nimport UserHomePage from \"../../../ui/user/home/UserHomePage\";\r\nimport UserAddProfile from '../../../ui/user/profile/pages/UserAddProfile';\r\nimport UserProfilePage from '../../../ui/user/profile/pages/UserProfilePage';\r\nimport UserRoutinesHomePage from '../../../ui/user/routines/pages/UserRoutinesHomePage';\r\nimport Navbar from \"../../../ui/user/navbar/pages/Navbar\";\r\nimport UserSessionHome from '../../../ui/user/sessions/pages/UserSessionHome';\r\nimport UserSessionTrainer from '../../../ui/user/sessions/pages/UserSessionTrainer';\r\nimport UserTrainersHome from '../../../ui/user/sessions/pages/UserTrainersHome';\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        profile @client\r\n    }\r\n`\r\n\r\nfunction UserSwitch() {\r\n\r\n    const { data } = useQuery(GET_AUTH_DATA);\r\n\r\n    console.log(data.profile)\r\n\r\n    if (data.profile) {\r\n        return (\r\n            <>\r\n                <Route path='/' > <Navbar /> </Route>\r\n                <Switch>\r\n                    <Route exact path='/'> <UserHomePage /> </Route>\r\n                    <Route exact path='/profile'> <UserProfilePage /> </Route>\r\n                    <Route exact path='/trainers/:id'> <UserSessionTrainer/> </Route>\r\n                    <Route exact path='/trainers'> <UserTrainersHome/> </Route>\r\n                    <Route exact path='/schedule'> <UserSessionHome/> </Route>\r\n                    <Route exact path='/routines'> <UserRoutinesHomePage /> </Route>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <Switch>\r\n                    <Route exact path='/'> <UserAddProfile /> </Route>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSwitch;","import React from 'react';\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from 'apollo-boost';\r\n\r\nimport DefaultSwitch from \"./default/index\";\r\nimport TrainerSwitch from './trainer';\r\nimport UserSwitch from './user/index'\r\n\r\nconst GET_AUTH_DATA = gql`\r\n    query getAuthData {\r\n        token @client\r\n        type @client\r\n    }\r\n`\r\n\r\nfunction Routes() {\r\n\r\n    const { data } = useQuery(GET_AUTH_DATA);\r\n    const { token, type } = data;\r\n\r\n    if (token !== '') {\r\n        if (type === 1) {\r\n            return <TrainerSwitch />\r\n        } else if (type === 2) {\r\n            return <UserSwitch />\r\n        }\r\n    }\r\n\r\n    return <DefaultSwitch />\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport Routes from \"./shared/routes/index\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return <Router> <Routes/> </Router>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ApolloClient from 'apollo-boost';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\nconst cache = new InMemoryCache()\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.GATEWAY_URL || 'http://localhost:3800/graphql', cache\r\n});\r\n\r\ncache.writeData({  data: {\r\n  token: localStorage.getItem(\"token\") || '',\r\n  type: parseInt(localStorage.getItem(\"type\")) || 0,\r\n  profile: !!localStorage.getItem(\"profile\") || false\r\n }});\r\n\r\n export default client;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport client from './apollo/client';\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/box.cbb048b2.webp\";","module.exports = __webpack_public_path__ + \"static/media/running_people.182d6b33.webp\";"],"sourceRoot":""}